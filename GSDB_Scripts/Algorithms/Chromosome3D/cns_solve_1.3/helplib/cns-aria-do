do {<aria-do-statement>} end

<aria-do-statement> :== 

  ( <noe-object> = <noe-expression> )

  <noe-object> :==

    noe_distance
    noe_lower
    noe_higher
    noe_volume
    noe_weight
    noe_test

  <noe-expression> :==

    <vflc> [ <operator> <atom-expression> ]

    <vflc> :==
 
      <noe-object>|<function>|<symbol>|<parameter>|<literal-constant>

      <function> :==        

        abs(<noe-expression>)
        acos(<noe-expression>)
        asin(<noe-expression>)
        cos(<noe-expression>)
        decode(<noe-expression>)
        encode(<noe-expression>)
        capitalize(<noe-expression>)
        exp(<noe-expression>)
        gaussian(<noe-expression>)
        step(<noe-expression>)
        integer(<noe-expression>)
        log(<noe-expression>)
        log10(<noe-expression>)
        maximum(<noe-expression>{,<noe-expression>})
        maxwell(<noe-expression>)
        minimum(<noe-expression>{,<noe-expression>})
        mod(<noe-expression>,<noe-expression>)
        norm(<noe-expression>)
        random()
        sign(<noe-expression>)
        sin(<noe-expression>)
        sqrt(<noe-expression>)
        tan(<noe-expression>)

    <operator> :==
        
      + | - | ~ | * | / | ^ | **
