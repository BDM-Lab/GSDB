          ============================================================
          |                                                          |
          |            Crystallography & NMR System (CNS)            |
          |                         CNSsolve                         |
          |                                                          |
          ============================================================
           Version: 1.3
           Status: General release
          ============================================================
           Written by: A.T.Brunger, P.D.Adams, G.M.Clore, W.L.DeLano,
                       P.Gros, R.W.Grosse-Kunstleve,J.-S.Jiang,J.M.Krahn,
                       J.Kuszewski, M.Nilges, N.S.Pannu, R.J.Read,
                       L.M.Rice, G.F.Schroeder, T.Simonson, G.L.Warren.
           Copyright (c) 1997-2010 Yale University
          ============================================================
           Running on machine: lewis4-r710-login-node223 (x86_64/Linux,64-bit)
                               with 16 threads
           Program started by: oeow39
           Program started at: 16:08:41 on 05-Jul-2018
          ============================================================

 FFT3C: Using FFTPACK4.1

 CNSsolve>remarks: filename siras.inp 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>topology 
 RTFRDR>    residue H 
 RESIDUE>      atom H mass=10.   charge=0.  type=HEAV end 
 RESIDUE>    end 
 RTFRDR>end 
 CNSsolve> 
 CNSsolve>segment 
 SEGMENT>  name = "IRCL" 
 SEGMENT>  molecule number=1 name=h end 
 SEGMENT>end 
 Status of internal molecular topology database:
 -> NATOM=          1(MAXA=     1000000)  NBOND=          0(MAXB=     1000000)
 -> NTHETA=         0(MAXT=     2000000)  NGRP=           1(MAXGRP=   1000000)
 -> NPHI=           0(MAXP=     2000000)  NIMPHI=         0(MAXIMP=   1000000)
 -> NNB=            0(MAXNB=    1000000) 
 CNSsolve>do (resid="1") ( segid IRCL ) 
 SELRPN:      1 atoms have been selected out of      1
 CNSsolve>segment 
 SEGMENT>  name = "RECL" 
 SEGMENT>  molecule number=1 name=h end 
 SEGMENT>end 
 Status of internal molecular topology database:
 -> NATOM=          2(MAXA=     1000000)  NBOND=          0(MAXB=     1000000)
 -> NTHETA=         0(MAXT=     2000000)  NGRP=           2(MAXGRP=   1000000)
 -> NPHI=           0(MAXP=     2000000)  NIMPHI=         0(MAXIMP=   1000000)
 -> NNB=            0(MAXNB=    1000000) 
 CNSsolve>do (resid="3") ( segid RECL ) 
 SELRPN:      1 atoms have been selected out of      2
 CNSsolve>segment 
 SEGMENT>  name = "RE3C" 
 SEGMENT>  molecule number=1 name=h end 
 SEGMENT>end 
 Status of internal molecular topology database:
 -> NATOM=          3(MAXA=     1000000)  NBOND=          0(MAXB=     1000000)
 -> NTHETA=         0(MAXT=     2000000)  NGRP=           3(MAXGRP=   1000000)
 -> NPHI=           0(MAXP=     2000000)  NIMPHI=         0(MAXIMP=   1000000)
 -> NNB=            0(MAXNB=    1000000) 
 CNSsolve>do (resid="4") ( segid RE3C ) 
 SELRPN:      1 atoms have been selected out of      3
 CNSsolve>segment 
 SEGMENT>  name = "PTCL" 
 SEGMENT>  molecule number=1 name=h end 
 SEGMENT>end 
 Status of internal molecular topology database:
 -> NATOM=          4(MAXA=     1000000)  NBOND=          0(MAXB=     1000000)
 -> NTHETA=         0(MAXT=     2000000)  NGRP=           4(MAXGRP=   1000000)
 -> NPHI=           0(MAXP=     2000000)  NIMPHI=         0(MAXIMP=   1000000)
 -> NNB=            0(MAXNB=    1000000) 
 CNSsolve>do (resid="2") ( segid PTCL ) 
 SELRPN:      1 atoms have been selected out of      4
 CNSsolve> 
 CNSsolve>coor 
 COOR>ATOM      1  H   H       1      28.435  19.129  16.510  1.00 15.00      IRCL 
 COOR>ATOM      2  H   H       2      29.221  18.856  17.445  1.00 15.00      PTCL 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>eval ($high_res=2.5 )       {* Use high resolution limit not higher than 4 A *} 
 EVALUATE: symbol $HIGH_RES set to    2.50000     (real)
 CNSsolve>eval ($high_res_2=3.5 )       {* Use high resolution limit not higher than 4 A *} 
 EVALUATE: symbol $HIGH_RES_2 set to    3.50000     (real)
 CNSsolve>eval ($low_res=15. ) 
 EVALUATE: symbol $LOW_RES set to    15.0000     (real)
 CNSsolve> 
 CNSsolve>{===>} 
 CNSsolve>eval ($a=61.76)                   {*Unit cell.*} 
 EVALUATE: symbol $A set to    61.7600     (real)
 CNSsolve>eval ($b=40.73) 
 EVALUATE: symbol $B set to    40.7300     (real)
 CNSsolve>eval ($c=26.74) 
 EVALUATE: symbol $C set to    26.7400     (real)
 CNSsolve>eval ($alpha=90.) 
 EVALUATE: symbol $ALPHA set to    90.0000     (real)
 CNSsolve>eval ($beta=90.) 
 EVALUATE: symbol $BETA set to    90.0000     (real)
 CNSsolve>eval ($gamma=90.) 
 EVALUATE: symbol $GAMMA set to    90.0000     (real)
 CNSsolve> 
 CNSsolve>{===>} 
 CNSsolve>eval ($SG="P2(1)2(1)2(1)")        {* Space group *} 
 EVALUATE: symbol $SG set to "P2(1)2(1)2(1)" (string)
 CNSsolve> 
 CNSsolve>xray 
 XRAY> 
 XRAY>   a=$a b=$b c=$c alpha=$alpha beta=$beta gamma=$gamma 
 XRAY> 
 XRAY>   @CNS_XTALLIB:spacegroup.lib  (sg=$sg)         {* Use space group number specified in symbol $SG *} 
 ASSFIL: file spacegroup.lib opened.
 XRAY>! file  libraries/xtal/spacegroup.lib 
 XRAY>! library of symmetry operators for CNS 
 XRAY>! Automatically generated with SgInfo Version 2.00a13 
 XRAY> 
 XRAY>module 
 MODULE-DECLARATION>( 
 MODULE-DECLARATION>  &sg=$sg; 
 MODULE-DECLARATION>  &sgparam=$sgparam; 
 MODULE-DECLARATION>) 
 &_2_SG set to $_1_SG 
 XRAY> 
 XRAY>set message ? end 
 MESSage=NORM
 XRAY>evaluate ($message_old=$result) 
 EVALUATE: symbol $MESSAGE_OLD set to "NORM" (string)
 XRAY>set echo ? end 
 ECHO=TRUE {ON}
 XRAY>evaluate ($echo_old=$result) 
 EVALUATE: symbol $ECHO_OLD set to TRUE (logical)
 XRAY>set echo=off message=off end 
SYMMETRY: found symmetry operators for space group P2(1)2(1)2(1) in library
 XRAY> 
 XRAY>         {* Use space group number specified in symbol $SG *} 
 XRAY> 
 XRAY>  {* only normal scattering included *} 
 XRAY> 
 XRAY>    scatter reset 
 XRAY> 
 XRAY>    eval ( $fprime=-5.79) 
 EVALUATE: symbol $FPRIME set to   -5.79000     (real)
 XRAY>    eval ( $fdprime=5.891) 
 EVALUATE: symbol $FDPRIME set to    5.89100     (real)
 XRAY>    eval ( $eeee=$fprime+10.472 ) 
 EVALUATE: symbol $EEEE set to    4.68200     (real)
 XRAY> 
 XRAY>    SCATter ( segid "RECL" or segid "RE3C" )  { for Re } 
 SELRPN:      2 atoms have been selected out of      4
 SCATTER_A1=  28.762100    1.671910   15.718900    9.092270   14.556400    0.350500    5.441740   52.086098 
 SCATTER_C=      $eeee   IMAG $fdprime 
 XRAY> 
 XRAY> 
 XRAY>    eval ( $fprime=-5.391) 
 EVALUATE: symbol $FPRIME set to   -5.39100     (real)
 XRAY>    eval ( $fdprime=6.566) 
 EVALUATE: symbol $FDPRIME set to    6.56600     (real)
 XRAY>    eval ( $eeee=$fprime+8.279030 ) 
 EVALUATE: symbol $EEEE set to    2.88803     (real)
 XRAY> 
 XRAY>    SCATter ( segid "IRCL" )  { for IR+3} 
 SELRPN:      1 atoms have been selected out of      4
 SCATTER_A1=    30.415600    1.343230   15.862000    7.109090   13.614500    0.204633    5.820080 
 SCATTER_B4=            20.325399    $eeee IMAG $fdprime 
 XRAY> 
 XRAY> 
 XRAY>    eval ( $fprime=-5.233) 
 EVALUATE: symbol $FPRIME set to   -5.23300     (real)
 XRAY>    eval ( $fdprime=6.925) 
 EVALUATE: symbol $FDPRIME set to    6.92500     (real)
 XRAY>    eval ( $eeee=$fprime+9.853290 ) 
 EVALUATE: symbol $EEEE set to    4.62029     (real)
 XRAY> 
 XRAY>    SCATter ( segid "PTCL" )  { for PT+2 } 
 SELRPN:      1 atoms have been selected out of      4
 SCATTER_A1=  29.842899    1.329270   16.722401    7.389790   13.215300    0.263297    6.352340   22.942600 
 SCATTER_C=        $eeee   IMAG $fdprime 
 XRAY> 
 XRAY>   aselection=( all ) 
 SELRPN:      4 atoms have been selected out of      4
 XRAY> 
 XRAY>   method=direct 
 XRAY>   hermitian=false 
 XRAY>   tolerance=0.0 
 XRAY> 
 XRAY>   binresolution $low_res $high_res 
 XRAY>   mapresolution $high_res 
 XRAY>   tselection=( $high_res <= d <= $low_res ) 
 XRAY> 
 XRAY>   reflection 
 REFLection> nref 8146 
 XRAY: increasing space allocation for up to    8146 reflections.
 REFLection> anomalous=true 
 REFLection> DECLare NAME=FOBS         DOMAin=RECIprocal   TYPE=COMP END 
 XDECLARE: Object FOBS has been declared.
 REFLection> DECLare NAME=FOM          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object FOM has been declared.
 REFLection> DECLare NAME=IRCL         DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object IRCL has been declared.
 REFLection> DECLare NAME=PTCL         DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object PTCL has been declared.
 REFLection> DECLare NAME=RECL         DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object RECL has been declared.
 REFLection> DECLare NAME=RE3C         DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object RE3C has been declared.
 REFLection> INDE     1    0  -13 FOBS=    79.066    90.000 FOM=     1.000 IRCL=     0.000 
 XSFAL: allocating space for complex reciprocal space object.
 XSFAL: allocating space for real reciprocal space object.
 XSFAL: allocating space for real reciprocal space object.
 XSFAL: allocating space for real reciprocal space object.
 XSFAL: allocating space for real reciprocal space object.
 XSFAL: allocating space for real reciprocal space object.
 XRRR2:     8146 new h,k,l indices have been added.
 XRAY> 
 XRAY> 
 XRAY>   DECLare NAME=PA          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object PA has been declared.
 XRAY>   DECLare NAME=PB          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object PB has been declared.
 XRAY>   DECLare NAME=PC          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object PC has been declared.
 XRAY>   DECLare NAME=PD          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object PD has been declared.
 XRAY>   group type=hl object=pa object=pb object=pc object=pd end 
 XRAY> 
 XRAY>   DECLare NAME=P2A          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object P2A has been declared.
 XRAY>   DECLare NAME=P2B          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object P2B has been declared.
 XRAY>   DECLare NAME=P2C          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object P2C has been declared.
 XRAY>   DECLare NAME=P2D          DOMAin=RECIprocal   TYPE=REAL END 
 XDECLARE: Object P2D has been declared.
 XRAY>   group type=hl object=p2a object=p2b object=p2c object=p2d end 
 XRAY> 
 XRAY>   DECLare NAME=M           DOMAin=RECIprocal   TYPE=COMPLEX END 
 XDECLARE: Object M has been declared.
 XRAY>   declare name=null        domain=reciprocal   type=real end 
 XDECLARE: Object NULL has been declared.
 XRAY>   declare domain=reci type=real name=vloi end {variance of lack-of-isomorphism} 
 XDECLARE: Object VLOI has been declared.
 XRAY>   declare domain=reci type=real name=vloc end {variance of lack-of-closure} 
 XDECLARE: Object VLOC has been declared.
 XRAY> 
 XRAY>   do (null=0) ( all ) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY> 
 XRAY>{* Add noise to the derivative data *} 
 XRAY>   do (RECL=max(0,amplitude(RECL)+gauss(1.0) * 0.01 * RECL ))  ( all ) 
 Total of      8146 structure factor elements were selected.
 XRAY> 
 XRAY>   do (vloi=0) ( all ) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY> 
 XRAY>end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>xray {* get Fh *} 
 XRAY> 
 XRAY>    declare name=fcalc domain=reciprocal type=complex end 
 XDECLARE: Object FCALC has been declared.
 XRAY>    associate fcalc  (segid "RECL" ) 
 SELRPN:      1 atoms have been selected out of      4
 XRAY> 
 XRAY>    method=direct 
 XRAY> 
 XRAY>    predict {* note: PREDICT computes Fs for all reflections *} 
 PREDict>       to=fcalc mode=reciprocal 
 PREDict>       atomselection=( segid "RECL" ) 
 SELRPN:      1 atoms have been selected out of      4
 PREDict>       selection=( $high_res <= d <= $low_res ) 
 Total of      4387 structure factor elements were selected.
 PREDict>    end 
 FCALC: #scatt.=      1 #anomalous=   1 #special pos.=  0 occupancies=1
 XSFAL: allocating space for complex reciprocal space object.
 XRAY>end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>xray 
 XRAY> 
 XRAY>   @@CNS_XTALMODULE:getlackofclosure ( 
 ASSFIL: file getlackofclosure opened.
 XRAY>! CNS_XTALMODULE: getlackofclosure 
 XRAY>! 
 XRAY>! CNS module 
 XRAY>! ********** 
 XRAY>! 
 XRAY>! Authors: Piet Gros and Axel T. Brunger 
 XRAY>! 
 XRAY>! copyright Yale University 
 XRAY>! 
 XRAY>! Function: 
 XRAY>! Compute lack-of-closure for each reflection 
 XRAY>! 
 XRAY>! Requirements: 
 XRAY>! 1. This module can only be used from within xray. 
 XRAY>! 2. Probability must be defined when &method="maxlike" or "anomaxlike" 
 XRAY>! 3. Phases for Fp must be defined when &method="chisquare" or "anochisquare" 
 XRAY>! 4. For anomalous differences ANOMalous must be TRUE and, thus, the 
 XRAY>!    arrays of domain=reciprocal (like structure factors) contain both 
 XRAY>!    the (+) and the (-) elements. 
 XRAY>! 
 XRAY> 
 XRAY>macro   {getlackofclosure} 
 MODULE-DECLARATION>( 
 MODULE-DECLARATION>   &method="maxlike"; {"centric" | "chisquare" | "maxlike" | 
 MODULE-DECLARATION>                       "anochisquare" | "anomaxlike" } 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &messages="normal"; {set verbosity "normal" | "all" | "off"} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &loc;               {lack-of-closure} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &sel=(all);         {structure factor selection} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &fp=fobs;           {specify native data array} 
 MODULE-DECLARATION>   &fh;                {specify heavy atom structure factor array} 
 MODULE-DECLARATION>   &fph;               {specify derivative data array  } 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &pa=pa;             {Hendrickson and Lattman A array} 
 MODULE-DECLARATION>   &pb=pb;             {Hendrickson and Lattman B array} 
 MODULE-DECLARATION>   &pc=pc;             {Hendrickson and Lattman C array} 
 MODULE-DECLARATION>   &pd=pd;             {Hendrickson and Lattman D array} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &phistep=20;        {size of phase steps in integration} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &cen360=FALSE; { TRUE | FALSE (type logical); if TRUE a full 0...360 phase prob. distr. } 
 MODULE-DECLARATION>                  { is used for centric reflections (useful if the "native"                } 
 MODULE-DECLARATION>                  { structure factor has an anomalous signal).                             } 
 MODULE-DECLARATION>) 
 MODULE-INVOCATION>           method="anochisquare"; 
 &_2_METHOD set to "anochisquare" 
 MODULE-INVOCATION>           messages="normal"; 
 &_2_MESSAGES set to "normal" 
 MODULE-INVOCATION>           loc=vloc; 
 &_2_LOC set to vloc 
 MODULE-INVOCATION>           sel=(amplitude(RECL)>0 and amplitude(fobs)>0 and $low_res >= d >= $high_res ); 
 &_2_SEL set to ( amplitude ( RECL ) >0 and amplitude ( fobs ) >0 and $_1_LOW_RES > = d > = $_1_HIGH_RES ) 
 MODULE-INVOCATION>           fp=fobs;fh=fcalc;fph=RECL; 
 &_2_FP set to fobs 
 &_2_FH set to fcalc 
 &_2_FPH set to RECL 
 MODULE-INVOCATION>           pa=pa;pb=pb;pc=pc;pd=pd; 
 &_2_PA set to pa 
 &_2_PB set to pb 
 &_2_PC set to pc 
 &_2_PD set to pd 
 MODULE-INVOCATION>           phistep=1.) 
 &_2_PHISTEP set to 1. 
 XRAY> 
 XRAY> 
 XRAY>checkversion 1.3 
 Program version= 1.3 File version= 1.3
 XRAY> 
 XRAY>declare domain=reci type=real name=selected end {selected reflections} 
 XDECLARE: Object SELECTED has been declared.
 XRAY> 
 XRAY> 
 XRAY>{*compute lack-of-closure*} 
 XRAY> 
 XRAY>if (&method = "chisquare") then	 
 NEXTCD: condition evaluated as false
 XRAY>   {*CHISQUARE formulation*} 
 XRAY> 
 XRAY>   do (&loc=0) (all)     {initialize} 
 XRAY> 
 XRAY>   do (&loc=             {compute lack-of-closure} 
 XRAY>          (abs(&fh+&fp)-abs(&fph))^2 
 XRAY>         ) (&sel) 
 XRAY> 
 XRAY>   if (&messages = "all") then 
 XRAY>         display GETLACKOFCLOSURE: individual chi-square closure errors on Fs 
 XRAY>         display GETLACKOFCLOSURE: expr= sqrt((| &fh + &fp |-| &fph |)^2) 
 XRAY>         show min (sqrt(&loc)) (&sel) 
 XRAY>         show max (sqrt(&loc)) (&sel) 
 XRAY>         show ave (sqrt(&loc)) (&sel) 
 XRAY>   end if 
 XRAY> 
 XRAY> 
 XRAY>elseif (&method = "anochisquare") then	 
 NEXTCD: condition evaluated as true
 XRAY> 
 XRAY>   {*ANOmalousCHISQUARE formulation*} 
 XRAY> 
 XRAY>   do (selected=0) ( all )               {select Bijvoet pairs} 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>   do (selected=1) ( friedel_pair(&sel) and acentric ) 
 Total of      2260 structure factor elements were selected.
 XRAY> 
 XRAY>   do (&loc=0) (all)            {initialize} 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY> 
 XRAY>   do (&loc=                    {compute lack-of-closure} 
 DO>          ( 
 DO>           abs(&fh+&fp)-abs(friedel(&fh)+friedel(&fp)) 
 DO>           -abs(&fph)+abs(friedel(&fph)) 
 DO>          )^2 
 DO>         ) (selected=1) 
 Total of      2260 structure factor elements were selected.
 XRAY> 
 XRAY>   if (&messages = "all") then 
 NEXTCD: condition evaluated as false
 XRAY>         display GETLACKOFCLOSURE: individual anomalous chi-square closure errors on Fs 
 XRAY>         display GETLACKOFCLOSURE: expr= sqrt( 
 XRAY>         display GETLACKOFCLOSURE:            ( 
 XRAY>         display GETLACKOFCLOSURE:             (| &fh(+) + &fp(+) |-| &fh(-) + &fp(-) |) 
 XRAY>         display GETLACKOFCLOSURE:             -(| &fph(+) |-| &fph(-) |) 
 XRAY>         display GETLACKOFCLOSURE:            )^2 
 XRAY>         display GETLACKOFCLOSURE:           ) 
 XRAY>         show min (sqrt(&loc)) (selected=1) 
 XRAY>         show max (sqrt(&loc)) (selected=1) 
 XRAY>         show ave (sqrt(&loc)) (selected=1) 
 XRAY>   end if 
 XRAY> 
 XRAY> 
 XRAY>elseif (&method = "maxlike") then 
 XRAY> 
 XRAY>    {*MAXimum-LIKElihood formulation*} 
 XRAY> 
 XRAY>   declare domain=reci type=real name=gl_pk end 
 XRAY>   @@CNS_XTALMODULE:normalizeprobability	 
 XRAY>           ( 
 XRAY>            sel=&sel; 
 XRAY>            pk=gl_pk; 
 XRAY>            pa=&pa;pb=&pb;pc=&pc;pd=&pd; 
 XRAY>            phistep=&phistep; 
 XRAY>            cen360=&cen360; 
 XRAY>           ) 
 XRAY> 
 XRAY>   do (&loc=0) (all)   {initialize} 
 XRAY>   do (&loc=GET_ML[PHIStep=&phistep,CEN360=&cen360](abs(&fp),&fh,abs(&fph),1.,gl_pk,&pa,&pb,&pc,&pd)) ( &sel ) 
 XRAY> 
 XRAY>   undeclare domain=reci name=gl_pk end 
 XRAY> 
 XRAY>   if (&messages = "all") then 
 XRAY>         display GETLACKOFCLOSURE: individual maximum-likelihood closure errors on Fs 
 XRAY>         display GETLACKOFCLOSURE: expr= sqrt( 
 XRAY>         display GETLACKOFCLOSURE:            Int 
 XRAY>         display GETLACKOFCLOSURE:            ( 
 XRAY>         display GETLACKOFCLOSURE:             (| &fh + &fp(phi) |-| &fph |)^2 P(phi) dphi 
 XRAY>         display GETLACKOFCLOSURE:            ) 
 XRAY>         display GETLACKOFCLOSURE:           ) 
 XRAY>         show min (sqrt(&loc)) (&sel) 
 XRAY>         show max (sqrt(&loc)) (&sel) 
 XRAY>         show ave (sqrt(&loc)) (&sel) 
 XRAY>   end if 
 XRAY> 
 XRAY>elseif (&method = "anomaxlike") then 
 XRAY> 
 XRAY>    {*ANOmalous MAXimum-LIKElihood*} 
 XRAY> 
 XRAY>   do (selected=0) ( all )       {select Bijvoet pairs} 
 XRAY>   do (selected=1) ( friedel_pair(&sel) and acentric ) 
 XRAY> 
 XRAY>   declare domain=reci type=real name=gl_pk end 
 XRAY>   @@CNS_XTALMODULE:normalizeprobability	 
 XRAY>           ( 
 XRAY>            sel=(selected=1); 
 XRAY>            pk=gl_pk; 
 XRAY>            pa=&pa;pb=&pb;pc=&pc;pd=&pd; 
 XRAY>            phistep=&phistep; 
 XRAY>            cen360=&cen360; 
 XRAY>           ) 
 XRAY> 
 XRAY>   do (&loc=0) (all)   {initialize} 
 XRAY> 
 XRAY>   do (&loc=GET_AML[PHIStep=&phistep](abs(&fp),&fh,abs(&fph),1.,gl_pk,&pa,&pb,&pc,&pd)) (selected=1) 
 XRAY> 
 XRAY>   undeclare domain=reci name=gl_pk end 
 XRAY> 
 XRAY>   if (&messages = "all") then 
 XRAY>         display GETLACKOFCLOSURE: individual anomalous maximum-likelihood closure errors on Fs 
 XRAY>         display GETLACKOFCLOSURE: expr= sqrt( 
 XRAY>         display GETLACKOFCLOSURE:            Int 
 XRAY>         display GETLACKOFCLOSURE:            ( 
 XRAY>         display GETLACKOFCLOSURE:             ( 
 XRAY>         display GETLACKOFCLOSURE:              (| &fh(+) + &fp(+)(phi) |-| &fh(-) + &fp(-)(-phi) |) 
 XRAY>         display GETLACKOFCLOSURE:              -(| &fph(+) |-| &fph(-) |) 
 XRAY>         display GETLACKOFCLOSURE:             )^2 
 XRAY>         display GETLACKOFCLOSURE:             P(phi) dphi 
 XRAY>         display GETLACKOFCLOSURE:            ) 
 XRAY>         display GETLACKOFCLOSURE:           ) 
 XRAY>         show min (sqrt(&loc)) (selected=1) 
 XRAY>         show max (sqrt(&loc)) (selected=1) 
 XRAY>         show ave (sqrt(&loc)) (selected=1) 
 XRAY>   end if 
 XRAY> 
 XRAY>else 
 XRAY> 
 XRAY>   display GETLACKOFCLOSURE-ERR: method &method not defined 
 XRAY> 
 XRAY>end if 
 XRAY> 
 XRAY>undeclare domain=reci name=selected end 
 Object SELECTED             has been undeclared.
 XRAY> 
 XRAY> 
 XRAY> 
 XRAY> 
 XRAY> 
 XRAY>   do (vloi=vloc) (amplitude(RECL)>0 and amplitude(fobs)>0 and $low_res >= d >= $high_res ) 
 Total of      2671 structure factor elements were selected.
 XRAY>              	{copy individual loc's} 
 XRAY> 
 XRAY>   @@CNS_XTALMODULE:substractmeasurementerror (       {compute individual loi's} 
 ASSFIL: file substractmeasurementerror opened.
 XRAY>! Module file: substractmeasurementerror 
 XRAY>! 
 XRAY>! CNS module 
 XRAY>! ********** 
 XRAY>! 
 XRAY>! Authors: Piet Gros and Axel T. Brunger 
 XRAY>! 
 XRAY>! copyright Yale University 
 XRAY>! 
 XRAY>! Function: 
 XRAY>! Substract measurement errors, as is needed for the computation of 
 XRAY>! the individual lack-of-isomorphism 
 XRAY>! 
 XRAY>! Requirements: 
 XRAY>! 1. This module can only be used from within xray. 
 XRAY>! 2. For anomalous differences ANOMalous must be TRUE and, thus, the 
 XRAY>!    arrays of domain=reciprocal (like structure factors) contain both 
 XRAY>!    the (+) and the (-) elements. 
 XRAY>! 
 XRAY> 
 XRAY>module {substractmeasurementerror} 
 MODULE-DECLARATION>( 
 MODULE-DECLARATION>   &anomalous="no";     {"yes" | "no", anomalous data} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &messages="normal";  {set verbosity "normal" | "all" | "off"} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &sel=(all);          {structure factor selection} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &var;                {variance array} 
 MODULE-DECLARATION>   &sp=null;            {measurement error of native data} 
 MODULE-DECLARATION>   &sph=null;           {measurement error of derivative data} 
 MODULE-DECLARATION>) 
 MODULE-INVOCATION>           anomalous="no";               {for printing purposes only} 
 &_2_ANOMALOUS set to "no" 
 MODULE-INVOCATION>           messages="normal"; 
 &_2_MESSAGES set to "normal" 
 MODULE-INVOCATION>           sel=(amplitude(RECL)>0 and amplitude(fobs)>0 and $low_res >= d >= $high_res ); 
 &_2_SEL set to ( amplitude ( RECL ) >0 and amplitude ( fobs ) >0 and $_1_LOW_RES > = d > = $_1_HIGH_RES ) 
 MODULE-INVOCATION>           var=vloi; 
 &_2_VAR set to vloi 
 MODULE-INVOCATION>           sp=null;sph=null;) 
 &_2_SP set to null 
 &_2_SPH set to null 
 XRAY> 
 XRAY>checkversion 1.3 
 Program version= 1.3 File version= 1.3
 XRAY> 
 XRAY>declare domain=reci type=real name=selected end  {selected reflections} 
 XDECLARE: Object SELECTED has been declared.
 XRAY> 
 XRAY>if (&anomalous = "yes") then  {*set flags for Bijvoet pairs*} 
 NEXTCD: condition evaluated as false
 XRAY>   do (selected=0) ( all ) 
 XRAY>   do (selected=1) ( friedel_pair(&sel) and acentric ) 
 XRAY>elseif (&anomalous = "no") then 
 NEXTCD: condition evaluated as true
 XRAY>   do (selected=0) (all) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>   do (selected=1) (&sel) 
 Total of      2671 structure factor elements were selected.
 XRAY>else 
 XRAY>   display SUBSTRACTMEASUREMENTERROR-ERR: anomalous flag &anomalous not defined 
 XRAY>end if 
 XRAY> 
 XRAY>{*substract measurement variances*} 
 XRAY> 
 XRAY>do (&var=&var-&sp^2-&sph^2) (selected=1) 
 Total of      2671 structure factor elements were selected.
 XRAY>if (&anomalous = "yes") then 
 NEXTCD: condition evaluated as false
 XRAY>   do (&var=&var-friedel(&sp)^2-friedel(&sph)^2) (selected=1) 
 XRAY>end if 
 XRAY>do (&var=max(0,&var)) (selected=1) 
 Total of      2671 structure factor elements were selected.
 XRAY> 
 XRAY>if (&messages = "all") then 
 NEXTCD: condition evaluated as false
 XRAY>   if (&anomalous = "yes") then 
 XRAY>      display SUBSTRACTMEASUREMENTERROR: anomalous standard deviation ("lack-of-isomorphism") 
 XRAY>      display SUBSTRACTMEASUREMENTERROR: expr= sqrt(&var 
 XRAY>      display SUBSTRACTMEASUREMENTERROR:            -&sp(+)^2-&sp(-)^2 
 XRAY>      display SUBSTRACTMEASUREMENTERROR:            -&sph(+)^2-&sph(-)^2 
 XRAY>      display SUBSTRACTMEASUREMENTERROR:           ) 
 XRAY>   else 
 XRAY>      display SUBSTRACTMEASUREMENTERROR: individual non-isomorphism estimates 
 XRAY>      display SUBSTRACTMEASUREMENTERROR: expr= sqrt(&var-&sp^2-&sph^2) 
 XRAY>   end if 
 XRAY>   show min (sqrt(&var)) (selected=1) 
 XRAY>   show max (sqrt(&var)) (selected=1) 
 XRAY>   show ave (sqrt(&var)) (selected=1) 
 XRAY>end if 
 XRAY> 
 XRAY> 
 XRAY>undeclare domain=reci name=selected end  {selected reflections} 
 Object SELECTED             has been undeclared.
 XRAY> 
 XRAY> 
 XRAY> 
 XRAY> 
 XRAY>   @@CNS_XTALMODULE:averagebin (                      {compute variance loi} 
 ASSFIL: file averagebin opened.
 XRAY>! Module file: averagebin 
 XRAY>! 
 XRAY>! CNS module 
 XRAY>! ********** 
 XRAY>! 
 XRAY>! Authors: Piet Gros and Axel T. Brunger 
 XRAY>! 
 XRAY>! copyright Yale University 
 XRAY>! 
 XRAY>! Function: 
 XRAY>! Average/interpolate/extraplote bin data computed from a subset of reflections 
 XRAY>! 
 XRAY>! Requirements: 
 XRAY>! 1. This module can only be called from xray 
 XRAY>! 
 XRAY> 
 XRAY>module {averagebin} 
 MODULE-DECLARATION>( 
 MODULE-DECLARATION>   &sel=(all);          {structure factor selection} 
 MODULE-DECLARATION>   &subsel=(all);       {subset of &sel from which average is computed} 
 MODULE-DECLARATION>   &epsilon="yes";      {"yes" | "no", use epsilon weighting in summing variances} 
 MODULE-DECLARATION>   &anomalous="no";     {"yes" | "no", anomalous data}   			 
 MODULE-DECLARATION>   &data;               {data array} 
 MODULE-DECLARATION>) 
 MODULE-INVOCATION>           anomalous="no";               {for potential porbability} 
 &_2_ANOMALOUS set to "no" 
 MODULE-INVOCATION>           epsilon="no";                 {calculation in target} 
 &_2_EPSILON set to "no" 
 MODULE-INVOCATION>           sel=(amplitude(RECL)>0 and amplitude(fobs)>0 and $low_res >= d >= $high_res ); 
 &_2_SEL set to ( amplitude ( RECL ) >0 and amplitude ( fobs ) >0 and $_1_LOW_RES > = d > = $_1_HIGH_RES ) 
 MODULE-INVOCATION>           subsel=(amplitude(RECL)>0 and amplitude(fobs)>0 and $low_res >= d >= $high_res ); 
 &_2_SUBSEL set to ( amplitude ( RECL ) >0 and amplitude ( fobs ) >0 and $_1_LOW_RES > = d > = $_1_HIGH_RES ) 
 MODULE-INVOCATION>           data=vloi;) 
 &_2_DATA set to vloi 
 XRAY> 
 XRAY>checkversion 1.3 
 Program version= 1.3 File version= 1.3
 XRAY> 
 XRAY>declare name=selected domain=reciprocal type=real end 
 XDECLARE: Object SELECTED has been declared.
 XRAY>declare name=subselected domain=reciprocal type=real end 
 XDECLARE: Object SUBSELECTED has been declared.
 XRAY> 
 XRAY>if (&anomalous = "yes") then 
 NEXTCD: condition evaluated as false
 XRAY>   do (selected=1) ( friedel_pair(&sel) and acentric ) 
 XRAY>   do (subselected=1) ( friedel_pair(&subsel) and acentric ) 
 XRAY>elseif (&anomalous = "no") then 
 NEXTCD: condition evaluated as true
 XRAY>   do (selected=1) (&sel) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      2671 structure factor elements were selected.
 XRAY>   do (subselected=1) (&subsel) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      2671 structure factor elements were selected.
 XRAY>else 
 XRAY>   display AVERAGEBIN-ERR: anomalous flag &anomalous not defined 
 XRAY>end if 
 XRAY> 
 XRAY>{ compute bin-wise average } 
 XRAY> 
 XRAY>if (&epsilon = "yes") then 
 NEXTCD: condition evaluated as false
 XRAY>   do (&data=&data /($symmetry/mult) ) (selected=1) 
 XRAY>end if 
 XRAY> 
 XRAY>{- average over all elements in subselection regardless 
 XRAY>   if they are zero -} 
 XRAY>do (&data=distribute( max(&data,.0000001)*subselected) ) ( selected=1) 
 Total of      2671 structure factor elements were selected.
 XRAY> 
 XRAY>if (&epsilon = "yes") then 
 NEXTCD: condition evaluated as false
 XRAY>   do (&data=&data*$symmetry/mult) (selected=1) 
 XRAY>end if 
 XRAY> 
 XRAY>undeclare name=selected domain=reciprocal end 
 Object SELECTED             has been undeclared.
 XRAY>undeclare name=subselected domain=reciprocal end 
 Object SUBSELECTED          has been undeclared.
 XRAY> 
 XRAY>   @@CNS_XTALMODULE:addmeasurementerror (             {compute total variance} 
 ASSFIL: file addmeasurementerror opened.
 XRAY>! Module file: addmeasurementerror 
 XRAY>! 
 XRAY>! CNS module 
 XRAY>! ********** 
 XRAY>! 
 XRAY>! Authors: Piet Gros and Axel T. Brunger 
 XRAY>! 
 XRAY>! copyright Yale University 
 XRAY>! 
 XRAY>! Function: 
 XRAY>! Add measurement errors to variance 
 XRAY>! 
 XRAY>! Requirements: 
 XRAY>! 1. This module can only be used from within xray. 
 XRAY>! 2. For anomalous differences ANOMalous must be TRUE and, thus, the 
 XRAY>!    arrays of domain=reciprocal (like structure factors) contain both 
 XRAY>!    the (+) and the (-) elements. 
 XRAY>! 
 XRAY> 
 XRAY>module {addmeasurementerror} 
 MODULE-DECLARATION>( 
 MODULE-DECLARATION>   &anomalous="no";{"yes" | "no", anomalous data} 
 MODULE-DECLARATION>   &epsilon="yes"; {"yes" | "no", use epsilon weighting in summing variances} 
 MODULE-DECLARATION>   &messages="normal";  {set verbosity "normal" | "all" | "off"} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &sel=(all);  {structure factor selection} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &var;        {variance array} 
 MODULE-DECLARATION>   &sp=null;    {measurement error of native data} 
 MODULE-DECLARATION>   &sph=null;   {measurement error of derivative data} 
 MODULE-DECLARATION>) 
 MODULE-INVOCATION>           anomalous="no"; 
 &_2_ANOMALOUS set to "no" 
 MODULE-INVOCATION>           messages="normal"; 
 &_2_MESSAGES set to "normal" 
 MODULE-INVOCATION>           epsilon="no"; 
 &_2_EPSILON set to "no" 
 MODULE-INVOCATION>           var=vloi; 
 &_2_VAR set to vloi 
 MODULE-INVOCATION>           sp=null;sph=null; 
 &_2_SP set to null 
 &_2_SPH set to null 
 MODULE-INVOCATION>           sel=(amplitude(RECL)>0 and amplitude(fobs)>0 and $low_res >= d >= $high_res );) 
 &_2_SEL set to ( amplitude ( RECL ) >0 and amplitude ( fobs ) >0 and $_1_LOW_RES > = d > = $_1_HIGH_RES ) 
 XRAY> 
 XRAY>checkversion 1.3 
 Program version= 1.3 File version= 1.3
 XRAY> 
 XRAY>declare domain=reci type=real name=selected end  {selected reflections} 
 XDECLARE: Object SELECTED has been declared.
 XRAY> 
 XRAY>if (&anomalous = "yes") then  {*set flags for Bijvoet pairs*} 
 NEXTCD: condition evaluated as false
 XRAY>   do (selected=0) ( all ) 
 XRAY>   do (selected=1) ( friedel_pair(&sel) and acentric ) 
 XRAY>elseif (&anomalous = "no") then 
 NEXTCD: condition evaluated as true
 XRAY>   do (selected=0) (all) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>   do (selected=1) (&sel) 
 Total of      2671 structure factor elements were selected.
 XRAY>else 
 XRAY>   display ADDMEASUREMENTERROR-ERR: anomalous flag &anomalous not defined 
 XRAY>end if 
 XRAY> 
 XRAY>		{*sum up variances*} 
 XRAY> 
 XRAY>if (&epsilon = "yes") then		{add variances using epsilon} 
 NEXTCD: condition evaluated as false
 XRAY> 
 XRAY>   if (&anomalous = "no") then 
 XRAY>! 
 XRAY>! use epsilon' for non-anomalous data 
 XRAY>! (R. Read, Dealing with imperfect isomorphism in multiple isomorphous replacement 
 XRAY>! In: Isomorphous replacement, proceedings of the CCP4 study weekend, 25-26 January, 1991. 
 XRAY>! Science & Engineering Research Council, Daresbury Laboratory, 1991). 
 XRAY>! 
 XRAY>      anomalous ? 
 XRAY>      if ($result=FALSE) then 
 XRAY>         do (&var=&sp^2+&sph^2+epsilon *&var) (selected=1 and acentric) 
 XRAY>         do (&var=&sp^2+&sph^2+epsilon *&var) (selected=1 and centric) 
 XRAY>      else 
 XRAY>! 
 XRAY>         do (&var=&sp^2+&sph^2+epsilon*&var) (selected=1) 
 XRAY>      end if 
 XRAY> 
 XRAY>      if (&messages = "all") then 
 XRAY>         display ADDMEASUREMENTERROR: total standard deviation 
 XRAY>         display ADDMEASUREMENTERROR: expr= sqrt( eps' &var + &sp^2 + &sph^2) 
 XRAY>         show min (sqrt(&var)) (selected=1) 
 XRAY>         show max (sqrt(&var)) (selected=1) 
 XRAY>         show ave (sqrt(&var)) (selected=1) 
 XRAY>      end if 
 XRAY> 
 XRAY>   elseif (&anomalous ="yes") then 
 XRAY>! 
 XRAY>! use epsilon' for this term (Fave, delta F formulation) 
 XRAY>      do (&var=&sp^2+friedel(&sp)^2+&sph^2+friedel(&sph)^2 
 XRAY>               +(epsilon/2)*&var) (selected=1) 
 XRAY> 
 XRAY>      if (&messages = "all") then 
 XRAY>         display ADDMEASUREMENTERROR: total standard deviation 
 XRAY>         display ADDMEASUREMENTERROR: expr= sqrt( eps' &var + 2 &sp^2 + 2 &sph^2) 
 XRAY>         show min (sqrt(&var)) (selected=1) 
 XRAY>         show max (sqrt(&var)) (selected=1) 
 XRAY>         show ave (sqrt(&var)) (selected=1) 
 XRAY>      end if 
 XRAY> 
 XRAY>   end if 
 XRAY> 
 XRAY> 
 XRAY>elseif (&epsilon = "no") then  {add variances without epsilon} 
 NEXTCD: condition evaluated as true
 XRAY> 
 XRAY>   if (&anomalous = "no") then 
 NEXTCD: condition evaluated as true
 XRAY> 
 XRAY>      do (&var=&sp^2+&sph^2+&var) (selected=1) 
 Total of      2671 structure factor elements were selected.
 XRAY> 
 XRAY>      if (&messages = "all") then 
 NEXTCD: condition evaluated as false
 XRAY>         display ADDMEASUREMENTERROR: total standard deviation 
 XRAY>         display ADDMEASUREMENTERROR: expr= sqrt( &var + &sp^2 + &sph^2) 
 XRAY>         show min (sqrt(&var)) (selected=1) 
 XRAY>         show max (sqrt(&var)) (selected=1) 
 XRAY>         show ave (sqrt(&var)) (selected=1) 
 XRAY>      end if 
 XRAY> 
 XRAY>   elseif (&anomalous ="yes") then 
 XRAY> 
 XRAY>      do (&var=&sp^2+friedel(&sp)^2+&sph^2+friedel(&sph)^2+&var) (selected=1) 
 XRAY> 
 XRAY>      if (&messages = "all") then 
 XRAY>         display ADDMEASUREMENTERROR: total standard deviation 
 XRAY>         display ADDMEASUREMENTERROR: expr= sqrt( &var + 2 &sp^2 + 2 &sph^2) 
 XRAY>         show min (sqrt(&var)) (selected=1) 
 XRAY>         show max (sqrt(&var)) (selected=1) 
 XRAY>         show ave (sqrt(&var)) (selected=1) 
 XRAY>      end if 
 XRAY> 
 XRAY>   end if 
 XRAY> 
 XRAY>else 
 XRAY>   display ADDMEASUREMENTERROR-ERR: epsilon &epsilon not recognized 
 XRAY>end if 
 XRAY> 
 XRAY>undeclare domain=reci name=selected end  {selected reflections} 
 Object SELECTED             has been undeclared.
 XRAY> 
 XRAY>   @@CNS_XTALMODULE:resetvariances (                  {reset zero variances} 
 ASSFIL: file resetvariances opened.
 XRAY>! Module file: resetvariances 
 XRAY>! 
 XRAY>! CNS module 
 XRAY>! ********** 
 XRAY>! 
 XRAY>! Authors: Piet Gros and Axel T. Brunger 
 XRAY>! 
 XRAY>! copyright Yale University 
 XRAY>! 
 XRAY>! Function: 
 XRAY>! Set small variances to &zerovar to avoid division by zero. 
 XRAY>! 
 XRAY>! Requirements: 
 XRAY>! 1. This module can only be used from within xray. 
 XRAY>! 
 XRAY> 
 XRAY>module {resetvariances} 
 MODULE-DECLARATION>( 
 MODULE-DECLARATION>   &resetzero=0.01;     {reset zero variances to &resetzero, to avoid division 
 MODULE-DECLARATION>                        by zero} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &zerovar=0.01;       {smallest significant value. For example, the smallest 
 MODULE-DECLARATION>                         digit defined by the diffraction data.} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &sel=(all);          {structure factor selection for phase set} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &var;                {variance array} 
 MODULE-DECLARATION>) 
 MODULE-INVOCATION>           zerovar=0.001;                 {for computing probabilities} 
 &_2_ZEROVAR set to 0.001 
 MODULE-INVOCATION>           resetzero=0.001; 
 &_2_RESETZERO set to 0.001 
 MODULE-INVOCATION>           var=vloi; 
 &_2_VAR set to vloi 
 MODULE-INVOCATION>           sel=(amplitude(RECL)>0 and amplitude(fobs)>0 and $low_res >= d >= $high_res );) 
 &_2_SEL set to ( amplitude ( RECL ) >0 and amplitude ( fobs ) >0 and $_1_LOW_RES > = d > = $_1_HIGH_RES ) 
 XRAY> 
 XRAY>checkversion 1.3 
 Program version= 1.3 File version= 1.3
 XRAY> 
 XRAY>if (&resetzero # 0) then 
 NEXTCD: condition evaluated as true
 XRAY> 
 XRAY>   do (&var=&resetzero) (&var < &zerovar and &sel) 
 Total of         0 structure factor elements were selected.
 XRAY>   if ($select > 0) then 
 NEXTCD: condition evaluated as false
 XRAY>      display RESETVARIANCES-INFO: $select phase-set variances &var of value < &zerovar set to &resetzero 
 XRAY>   end if 
 XRAY>   do (&var=&resetzero) (&var < &zerovar and not (&sel) ) 
 Total of      5475 structure factor elements were selected.
 XRAY> 
 XRAY>end if 
 XRAY> 
 XRAY> 
 XRAY>   @@CNS_XTALMODULE:getprobability ( 
 ASSFIL: file getprobability opened.
 XRAY>! Module file: getprobability 
 XRAY>! 
 XRAY>! CNS module 
 XRAY>! ********** 
 XRAY>! 
 XRAY>! Authors: Piet Gros and Axel T. Brunger 
 XRAY>! 
 XRAY>! copyright Yale University 
 XRAY>! 
 XRAY>! Function: 
 XRAY>! Calculation of the phase probability of a LOC 
 XRAY>! 
 XRAY>! Requirements: 
 XRAY>! 1. This module can only be called called from xray 
 XRAY>! 2. An estimate of the lack-of-isomorphism is required 
 XRAY>! 3. For anomalous differences ANOMalous must be TRUE and, thus, the 
 XRAY>!    arrays of domain=reciprocal (like structure factors) contain both 
 XRAY>!    the (+) and the (-) elements. 
 XRAY>! 
 XRAY> 
 XRAY>module {getprobability} 
 MODULE-DECLARATION>( 
 MODULE-DECLARATION>   &method="maxlike";       {"chisquare" | "maxlike" | 
 MODULE-DECLARATION>                             "anochisquare" | "anomaxlike" } 
 MODULE-DECLARATION>   &integration="analytic"; {integration for probabilities: "numerical" | "analytic" } 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &messages="normal";      {set verbosity "normal" | "all" | "off"} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &fp=fobs;                {native data} 
 MODULE-DECLARATION>   &sp=null;                {native sigma} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &sel=(all);              {selection of LOC structure factors} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &nameh=derivative;       {derivative identifier used for output only} 
 MODULE-DECLARATION>   &fh=null;                {name of heavy atom structure factors} 
 MODULE-DECLARATION>   &fph=null;               {name of derivative data array} 
 MODULE-DECLARATION>   &sph=null;               {name of derivative's sigma array} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &var;                    {variance of the lack-of-isomorphis plus measurement errors} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>                        {output probability:} 
 MODULE-DECLARATION>   &pa=pa;              {Hendrickson and Lattman A array} 
 MODULE-DECLARATION>   &pb=pb;              {Hendrickson and Lattman B array} 
 MODULE-DECLARATION>   &pc=pc;              {Hendrickson and Lattman C array} 
 MODULE-DECLARATION>   &pd=pd;              {Hendrickson and Lattman D array} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &phistep=20;         {size of phase steps in integration} 
 MODULE-DECLARATION> 
 MODULE-DECLARATION>   &cen360=FALSE; { TRUE | FALSE (type logical); if TRUE a full 0...360 phase prob. distr. } 
 MODULE-DECLARATION>                  { is used for centric reflections (useful if the "native"                } 
 MODULE-DECLARATION>                  { structure factor has an anomalous signal).                             } 
 MODULE-DECLARATION>) 
 MODULE-INVOCATION>           method="anochisquare"; 
 &_2_METHOD set to "anochisquare" 
 MODULE-INVOCATION>           integration="analytic"; 
 &_2_INTEGRATION set to "analytic" 
 MODULE-INVOCATION>           messages="normal"; 
 &_2_MESSAGES set to "normal" 
 MODULE-INVOCATION>           fp=fobs;sp=null; 
 &_2_FP set to fobs 
 &_2_SP set to null 
 MODULE-INVOCATION>           sel=(amplitude(fobs)>0 and amplitude(RECL)>0 
 SEL=                and $low_res >= d >= $high_res ); 
 &_2_SEL set to ( amplitude ( fobs ) >0 and amplitude ( RECL ) >0 
 and $_1_LOW_RES > = d > = $_1_HIGH_RES ) 
 MODULE-INVOCATION>           fh=fcalc;fph=RECL;sph=null; 
 &_2_FH set to fcalc 
 &_2_FPH set to RECL 
 &_2_SPH set to null 
 MODULE-INVOCATION>	   var=vloi; 
 &_2_VAR set to vloi 
 MODULE-INVOCATION>           pa=p2a;pb=p2b;pc=p2c;pd=p2d; 
 &_2_PA set to p2a 
 &_2_PB set to p2b 
 &_2_PC set to p2c 
 &_2_PD set to p2d 
 MODULE-INVOCATION>           phistep=1.;)	 
 &_2_PHISTEP set to 1. 
 XRAY> 
 XRAY>checkversion 1.3 
 Program version= 1.3 File version= 1.3
 XRAY> 
 XRAY>declare domain=reci type=real name=selected end {selected bijvoet pairs array} 
 XDECLARE: Object SELECTED has been declared.
 XRAY> 
 XRAY>				 
 XRAY>do (&pa=0) (all)   {initialize probability} 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>do (&pb=0) (all) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>do (&pc=0) (all) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>do (&pd=0) (all) 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY> 
 XRAY>if (&messages = "all") then 
 NEXTCD: condition evaluated as false
 XRAY>   display GETPROBABILITY: probability computed from &nameh 
 XRAY>end if 
 XRAY> 
 XRAY>if (&method = "chisquare") then 
 NEXTCD: condition evaluated as false
 XRAY>   evaluate ($gp_ano="no") 
 XRAY>elseif (&method = "maxlike") then 
 NEXTCD: condition evaluated as false
 XRAY>   evaluate ($gp_ano="no") 
 XRAY>elseif (&method = "anochisquare") then 
 NEXTCD: condition evaluated as true
 XRAY>   evaluate ($gp_ano="yes") 
 EVALUATE: symbol $GP_ANO set to "yes" (string)
 XRAY>elseif (&method = "anomaxlike") then 
 XRAY>   evaluate ($gp_ano="yes") 
 XRAY>else 
 XRAY>   display GETPROBABILITY-ERR: method &method not defined 
 XRAY>end if 
 XRAY> 
 XRAY> 
 XRAY>    		{*compute probabilities and express in ABCD*} 
 XRAY>						 
 XRAY>if ($gp_ano = "no") then 
 NEXTCD: condition evaluated as false
 XRAY>                          {SIR probability} 
 XRAY> 
 XRAY>   do (selected=0) (all)  {select reflections} 
 XRAY>   do (selected=1) (&sel) 
 XRAY> 
 XRAY>   do (&pa= 
 XRAY>          ( 
 XRAY>           cos(centric_phase)* 
 XRAY>           ( 
 XRAY>            -(abs(&fh+combine(abs(&fp),centric_phase))-abs(&fph))^2/(2*&var) 
 XRAY>            +(abs(&fh-combine(abs(&fp),centric_phase))-abs(&fph))^2/(2*&var) 
 XRAY>           ) 
 XRAY>          ) 
 XRAY>         )   (not &cen360 and centric and selected=1) 
 XRAY>   do (&pb= 
 XRAY>          ( 
 XRAY>           sin(centric_phase)* 
 XRAY>           ( 
 XRAY>            -(abs(&fh+combine(abs(&fp),centric_phase))-abs(&fph))^2/(2*&var) 
 XRAY>            +(abs(&fh-combine(abs(&fp),centric_phase))-abs(&fph))^2/(2*&var) 
 XRAY>           ) 
 XRAY>          ) 
 XRAY>         )   (not &cen360 and centric and selected=1) 
 XRAY>   do (&pc=0) (not &cen360 and centric and selected=1) 
 XRAY>   do (&pd=0) (not &cen360 and centric and selected=1) 
 XRAY> 
 XRAY> 
 XRAY>   if (&integration = "numerical") then 
 XRAY> 
 XRAY>      do (&pa= 
 XRAY>          2/360* 
 XRAY>          (integrate[_phi,0,360,&phistep] 
 XRAY>           (cos(_phi)* 
 XRAY>            ( 
 XRAY>             -(abs(&fh+combine(abs(&fp),_phi))-abs(&fph))^2/(2*&var) 
 XRAY>            ) 
 XRAY>           ) 
 XRAY>          ) 
 XRAY>         )   ( (&cen360 or acentric) and selected=1) 
 XRAY> 
 XRAY>      do (&pb= 
 XRAY>          2/360* 
 XRAY>          (integrate[_phi,0,360,&phistep] 
 XRAY>           (sin(_phi)* 
 XRAY>            ( 
 XRAY>             -(abs(&fh+combine(abs(&fp),_phi))-abs(&fph))^2/(2*&var) 
 XRAY>            ) 
 XRAY>           ) 
 XRAY>          ) 
 XRAY>         )   ( (&cen360 or acentric) and selected=1) 
 XRAY>      do (&pc= 
 XRAY>          2/360* 
 XRAY>          (integrate[_phi,0,360,&phistep] 
 XRAY>           (cos(2*_phi)* 
 XRAY>            ( 
 XRAY>             -(abs(&fh+combine(abs(&fp),_phi))-abs(&fph))^2/(2*&var) 
 XRAY>            ) 
 XRAY>           ) 
 XRAY>          ) 
 XRAY>         )   ( (&cen360 or acentric) and selected=1) 
 XRAY>      do (&pd= 
 XRAY>          2/360* 
 XRAY>          (integrate[_phi,0,360,&phistep] 
 XRAY>           (sin(2*_phi)* 
 XRAY>            ( 
 XRAY>             -(abs(&fh+combine(abs(&fp),_phi))-abs(&fph))^2/(2*&var) 
 XRAY>            ) 
 XRAY>           ) 
 XRAY>          ) 
 XRAY>         )   ( (&cen360 or acentric) and selected=1) 
 XRAY> 
 XRAY>   elseif (&integration = "analytic") then 
 XRAY>! 
 XRAY>! note: the variances (&var) refer to amplitude variances (E(F)). 
 XRAY>! Hendrickson (1979), Acta Cryst. A35, 245-247 showed the relationship to intensity 
 XRAY>! variances:  E(I)^2 = 3 E(F)^4 + 4 (Fph^2 + sigma(Fph)^2) E(F)^2. 
 XRAY>! 
 XRAY>! The resulting phase probability distribution (exp(- loc(I's)^2/ 2(E(I))^2)) is 
 XRAY>! identical to the phase probability distribution based on amplitudes 
 XRAY>! (exp(-loc(F's)^2/2E(F)^2)) if one assumes a normal distribution of the errors. 
 XRAY>! 
 XRAY>! See Blundell & Johnson, 1976, Protein Crystallography, for a derivation. 
 XRAY>! 
 XRAY> 
 XRAY>      do (&pa=-2 * (amplitude(&fp)^2 + amplitude(&fh)^2 - amplitude(&fph)^2 ) * amplitude(&fp) * real(&fh)/ 
 XRAY>                   (3 * &var^2 + 4 * (amplitude(&fph)^2+&sph^2) * &var) ) 
 XRAY>          ( (&cen360 or acentric) and selected=1) 
 XRAY> 
 XRAY>      do (&pb=-2 * (amplitude(&fp)^2 + amplitude(&fh)^2 - amplitude(&fph)^2 ) * amplitude(&fp) * imag(&fh)/ 
 XRAY>                   (3 * &var^2 + 4 * (amplitude(&fph)^2+&sph^2) * &var) ) 
 XRAY>          ( (&cen360 or acentric) and selected=1) 
 XRAY> 
 XRAY>      do (&pc=-amplitude(&fp)^2 * (real(&fh)^2 - imag(&fh)^2) / 
 XRAY>                   (3 * &var^2 + 4 * (amplitude(&fph)^2+&sph^2) * &var) ) 
 XRAY>          ( (&cen360 or acentric) and selected=1) 
 XRAY> 
 XRAY>      do (&pd=-2 * amplitude(&fp)^2 * real(&fh) * imag(&fh) / 
 XRAY>                   (3 * &var^2 + 4 * (amplitude(&fph)^2+&sph^2) * &var) ) 
 XRAY>          ( (&cen360 or acentric) and selected=1) 
 XRAY> 
 XRAY>   else 
 XRAY> 
 XRAY>      display GETPROBABILITY-ERR: integration &integration not defined 
 XRAY> 
 XRAY>   end if 
 XRAY> 
 XRAY>elseif ($gp_ano = "yes") then 
 NEXTCD: condition evaluated as true
 XRAY>   {ANOmalous SIR probability between Friedel mates (acentrics only) } 
 XRAY> 
 XRAY>   do (selected=0) ( all )   {select bijvoet pairs} 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>   do (selected=1) ( friedel_pair(&sel) and acentric ) 
 Total of      2260 structure factor elements were selected.
 XRAY> 
 XRAY>   if (&integration = "numerical") then 
 NEXTCD: condition evaluated as false
 XRAY> 
 XRAY>      do (&pa= 
 XRAY>       2/360* 
 XRAY>       (integrate[_phi,0,360,&phistep] 
 XRAY>        (cos(_phi)* 
 XRAY>         (- 
 XRAY>          ( 
 XRAY>           abs(&fh+combine(abs(&fp),_phi)) 
 XRAY>           -abs(friedel(&fh)+combine(abs(friedel(&fp)),-_phi)) 
 XRAY>           -abs(&fph)+abs(friedel(&fph)) 
 XRAY>          )^2 
 XRAY>          /(2*&var) 
 XRAY>         ) 
 XRAY>        ) 
 XRAY>       ) 
 XRAY>      )   (selected=1) 
 XRAY>      do (&pb= 
 XRAY>       2/360* 
 XRAY>       (integrate[_phi,0,360,&phistep] 
 XRAY>        (sin(_phi)* 
 XRAY>         (- 
 XRAY>          ( 
 XRAY>           abs(&fh+combine(abs(&fp),_phi)) 
 XRAY>           -abs(friedel(&fh)+combine(abs(friedel(&fp)),-_phi)) 
 XRAY>           -abs(&fph)+abs(friedel(&fph)) 
 XRAY>          )^2 
 XRAY>          /(2*&var) 
 XRAY>         ) 
 XRAY>        ) 
 XRAY>       ) 
 XRAY>      )   (selected=1) 
 XRAY>      do (&pc= 
 XRAY>       2/360* 
 XRAY>       (integrate[_phi,0,360,&phistep] 
 XRAY>        (cos(2*_phi)* 
 XRAY>         (- 
 XRAY>          ( 
 XRAY>           abs(&fh+combine(abs(&fp),_phi)) 
 XRAY>           -abs(friedel(&fh)+combine(abs(friedel(&fp)),-_phi)) 
 XRAY>           -abs(&fph)+abs(friedel(&fph)) 
 XRAY>          )^2 
 XRAY>          /(2*&var) 
 XRAY>         ) 
 XRAY>        ) 
 XRAY>       ) 
 XRAY>      )   (selected=1) 
 XRAY>      do (&pd= 
 XRAY>       2/360* 
 XRAY>       (integrate[_phi,0,360,&phistep] 
 XRAY>        (sin(2*_phi)* 
 XRAY>         (- 
 XRAY>          ( 
 XRAY>           abs(&fh+combine(abs(&fp),_phi)) 
 XRAY>           -abs(friedel(&fh)+combine(abs(friedel(&fp)),-_phi)) 
 XRAY>           -abs(&fph)+abs(friedel(&fph)) 
 XRAY>          )^2 
 XRAY>          /(2*&var) 
 XRAY>         ) 
 XRAY>        ) 
 XRAY>       ) 
 XRAY>      )   (selected=1) 
 XRAY> 
 XRAY> 
 XRAY>   elseif (&integration = "analytic") then 
 NEXTCD: condition evaluated as true
 XRAY> 
 XRAY>      do (&pa= -2 * amplitude(&fp) * amplitude((&fh-conjugate(friedel(&fh)))/2) 
 DO>                  * ( amplitude(&fph) - amplitude(friedel(&fph)) ) * imag((&fh+conjugate(friedel(&fh)))/2) 
 DO>             /( amplitude((&fh+conjugate(friedel(&fh)))/2) *  ((amplitude(&fph)+amplitude(friedel(&fph)))/2)  *&var) 
 DO>         )  (selected=1) 
 Total of      2260 structure factor elements were selected.
 XRAY> 
 XRAY>      do (&pb= 2 * amplitude(&fp) * amplitude((&fh-conjugate(friedel(&fh)))/2) 
 DO>                  * ( amplitude(&fph) - amplitude(friedel(&fph)) ) * real((&fh+conjugate(friedel(&fh)))/2) 
 DO>             /( amplitude((&fh+conjugate(friedel(&fh)))/2) *  ((amplitude(&fph)+amplitude(friedel(&fph)))/2)  *&var) 
 DO>         )  (selected=1) 
 Total of      2260 structure factor elements were selected.
 XRAY> 
 XRAY>      do (&pc= amplitude(&fp)^2 * amplitude((&fh-conjugate(friedel(&fh)))/2)^2 
 DO>                  * (real((&fh+conjugate(friedel(&fh)))/2)^2 - imag((&fh+conjugate(friedel(&fh)))/2)^2 ) 
 DO>             /( amplitude((&fh+conjugate(friedel(&fh)))/2)^2 *  ((amplitude(&fph)+amplitude(friedel(&fph)))/2)^2  *&var) 
 DO>         )  (selected=1) 
 Total of      2260 structure factor elements were selected.
 XRAY> 
 XRAY>      do (&pd= 2 * amplitude(&fp)^2 * amplitude((&fh-conjugate(friedel(&fh)))/2)^2 
 DO>                  * (real((&fh+conjugate(friedel(&fh)))/2) * imag((&fh+conjugate(friedel(&fh)))/2) ) 
 DO>             /( amplitude((&fh+conjugate(friedel(&fh)))/2)^2 *  ((amplitude(&fph)+amplitude(friedel(&fph)))/2)^2  *&var) 
 DO>         )  (selected=1) 
 Total of      2260 structure factor elements were selected.
 XRAY> 
 XRAY> 
 XRAY>   else 
 XRAY> 
 XRAY>     display GETPROBABILITY-ERR: integration &integration not defined 
 XRAY> 
 XRAY>   end if 
 XRAY> 
 XRAY>else 
 XRAY> 
 XRAY>   display GETPROBABILITY-ERR: method &method not defined 
 XRAY> 
 XRAY>end if 
 XRAY> 
 XRAY>undeclare domain=reci name=selected end {selected bijvoet pairs array} 
 Object SELECTED             has been undeclared.
 XRAY> 
 XRAY> 
 XRAY>	 
 XRAY> 
 XRAY> 
 XRAY> 
 XRAY>end 
 CNSsolve> 
 CNSsolve>xray 
 XRAY>   declare domain=reci type=real name=work5 end 
 XDECLARE: Object WORK5 has been declared.
 XRAY>   declare domain=reci type=real name=selt2 end 
 XDECLARE: Object SELT2 has been declared.
 XRAY>   do (selt2=0) (all)				{select bijvoet pairs} 
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>   do (selt2=-1) (amplitude(fobs)>0 and amplitude(RECL)>0 and $low_res >= d >= $high_res) 
 Total of      2671 structure factor elements were selected.
 XRAY>   do (work5=friedel(selt2)) (all) 
 XDOFRIED-warning: Friedel mate for reflection      2     4   -10 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      7     3    -9 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      7     4    -9 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     12     3    -8 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      7     6    -8 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     14     6    -7 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      8     8    -7 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      6     7    -6 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      6     9    -5 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     18     4    -4 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     12    12    -3 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     19     7    -2 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     22     2    -1 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      7    14    -1 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      8    13     1 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      5    15     1 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     10    10     2 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     16    11     2 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     21     4     5 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     11     8     6 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     11     8     7 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      1    12     7 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      2     4     8 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     11     4     8 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection     10     8     8 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      4     3     9 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      3     7     9 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      4     7     9 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      5     7     9 not found in selected set.
 XDOFRIED-warning: Friedel mate for reflection      7     7     9 not found in selected set.
 XSFAL: allocating space for real reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>   do (selt2=1) (selt2=-1 and work5=-1) 
 Total of      2607 structure factor elements were selected.
 XRAY>end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>{* compute the normal component of the derivative structure factor *} 
 CNSsolve>{* Approximation !*} 
 CNSsolve>xray 
 XRAY>   declare domain=reci type=comp name=fiso end 
 XDECLARE: Object FISO has been declared.
 XRAY>   do (fiso=0) ( all ) 
 XSFAL: allocating space for complex reciprocal space object.
 Total of      8146 structure factor elements were selected.
 XRAY>   do (fiso=combine( (amplitude(RECL)+amplitude(friedel(RECL)))/2,0.))  ( selt2=1 ) 
 Total of      2607 structure factor elements were selected.
 XRAY>end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>xray 
 XRAY> 
 XRAY> 
 XRAY>    scatter reset 
 XRAY> 
 XRAY>    eval ( $fprime=-5.79) 
 EVALUATE: symbol $FPRIME set to   -5.79000     (real)
 XRAY>    eval ( $fdprime=5.891) 
 EVALUATE: symbol $FDPRIME set to    5.89100     (real)
 XRAY>    eval ( $eeee=$fprime+10.472 ) 
 EVALUATE: symbol $EEEE set to    4.68200     (real)
 XRAY> 
 XRAY>    SCATter ( segid "RECL" or segid "RE3C" )  { for Re } 
 SELRPN:      2 atoms have been selected out of      4
 SCATTER_A1=  28.762100    1.671910   15.718900    9.092270   14.556400    0.350500    5.441740   52.086098 
 SCATTER_C=      $eeee 
 XRAY> 
 XRAY> 
 XRAY>    eval ( $fprime=-5.391) 
 EVALUATE: symbol $FPRIME set to   -5.39100     (real)
 XRAY>    eval ( $fdprime=6.566) 
 EVALUATE: symbol $FDPRIME set to    6.56600     (real)
 XRAY>    eval ( $eeee=$fprime+8.279030 ) 
 EVALUATE: symbol $EEEE set to    2.88803     (real)
 XRAY> 
 XRAY>    SCATter ( segid "IRCL" )  { for IR+3} 
 SELRPN:      1 atoms have been selected out of      4
 SCATTER_A1=    30.415600    1.343230   15.862000    7.109090   13.614500    0.204633    5.820080 
 SCATTER_B4=            20.325399    $eeee 
 XRAY> 
 XRAY> 
 XRAY>    eval ( $fprime=-5.233) 
 EVALUATE: symbol $FPRIME set to   -5.23300     (real)
 XRAY>    eval ( $fdprime=6.925) 
 EVALUATE: symbol $FDPRIME set to    6.92500     (real)
 XRAY>    eval ( $eeee=$fprime+9.853290 ) 
 EVALUATE: symbol $EEEE set to    4.62029     (real)
 XRAY> 
 XRAY>    SCATter ( segid "PTCL" )  { for PT+2 } 
 SELRPN:      1 atoms have been selected out of      4
 SCATTER_A1=  29.842899    1.329270   16.722401    7.389790   13.215300    0.263297    6.352340   22.942600 
 SCATTER_C=        $eeee 
 XRAY> 
 XRAY> 
 XRAY>   do (null=0) ( all ) 
 Total of      8146 structure factor elements were selected.
 XRAY> 
 XRAY>   do (vloi=0) ( all ) 
 Total of      8146 structure factor elements were selected.
 XRAY> 
 XRAY>end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>set echo off end 
COMBINEPROBABILITY: adding probability "FISO" and "RECL"
COMBINEPROBABILITY: P'("FISO") = P("FISO")^1 * P("RECL")^1

 ==========================================================

 FOM-weighted phase difference between ideal protein phases
 and phase obtained by SIRAS_A

 #bin | resolution range | #refl | 
    1   4.95   15.00        393      4.3525    0.9827
    2   3.95    4.95        387      3.8926    0.9799
    3   3.46    3.95        356      3.8446    0.9608
    4   3.14    3.46        365      2.9851    0.9824
    5   2.92    3.14        342      3.1770    0.9799
    6   2.75    2.92        294      3.2493    0.9746
    7   2.61    2.75        255      3.5520    0.9855
    8   2.50    2.61        215      3.0431    0.9863
 #bin | resolution range | #refl | 
    1   2.50   15.00       2607      3.5578    0.9785

 ==========================================================

 unweighted phase difference between ideal protein phases
 and phase obtained by SIRAS_A

 #bin | resolution range | #refl | 
    1   4.95   15.00        393      4.5519    0.9827
    2   3.95    4.95        387      4.4299    0.9799
    3   3.46    3.95        356      4.9271    0.9608
    4   3.14    3.46        365      3.3918    0.9824
    5   2.92    3.14        342      3.8005    0.9799
    6   2.75    2.92        294      3.9622    0.9746
    7   2.61    2.75        255      3.8151    0.9855
    8   2.50    2.61        215      3.0966    0.9863
 #bin | resolution range | #refl | 
    1   2.50   15.00       2607      4.0654    0.9785
          ============================================================
           Maximum dynamic memory allocation:    13806256 bytes
           Maximum dynamic memory overhead:           960 bytes
           Program started at: 16:08:41 on 05-Jul-2018
           Program stopped at: 16:08:42 on 05-Jul-2018
           CPU time used:       2.0540 seconds
          ============================================================
