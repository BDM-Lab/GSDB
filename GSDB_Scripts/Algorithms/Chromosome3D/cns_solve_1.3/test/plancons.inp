remarks PLANCONS
remarks TEST CASE FOR PLANAR HARMONIC CONSTRAINTS
remarks

topology @CNS_TOPPAR:protein.top end
parameter @CNS_TOPPAR:protein.param end

segment
  name=main
  chain
     @CNS_TOPPAR:protein.link
     sequence
        TRP
     end
  end
end

coor
ATOM      1  HT1 TRP     1       0.101   0.574  -1.385  1.00  0.00      MAIN
ATOM      2  HT2 TRP     1       1.711   0.436  -1.904  1.00  0.00      MAIN
ATOM      3  N   TRP     1       1.067   0.302  -1.101  1.00  0.00      MAIN
ATOM      4  HT3 TRP     1       1.080  -0.689  -0.791  1.00  0.00      MAIN
ATOM      5  CA  TRP     1       1.472   1.192   0.027  1.00  0.00      MAIN
ATOM      6  CB  TRP     1       2.696   2.026  -0.348  1.00  0.00      MAIN
ATOM      7  CG  TRP     1       3.922   1.169  -0.679  1.00  0.00      MAIN
ATOM      8  CD2 TRP     1       4.295   0.679  -1.890  1.00  0.00      MAIN
ATOM      9  CE2 TRP     1       5.424  -0.010  -1.601  1.00  0.00      MAIN
ATOM     10  CE3 TRP     1       3.769   0.774  -3.155  1.00  0.00      MAIN
ATOM     11  CD1 TRP     1       4.813   0.775   0.290  1.00  0.00      MAIN
ATOM     12  NE1 TRP     1       5.727   0.046  -0.320  1.00  0.00      MAIN
ATOM     13  HE1 TRP     1       6.094  -0.743   0.127  1.00  0.00      MAIN
ATOM     14  CZ2 TRP     1       6.138  -0.677  -2.563  1.00  0.00      MAIN
ATOM     15  CZ3 TRP     1       4.472   0.108  -4.148  1.00  0.00      MAIN
ATOM     16  CH2 TRP     1       5.636  -0.605  -3.856  1.00  0.00      MAIN
ATOM     17  C   TRP     1       0.280   2.113   0.309  1.00  0.00      MAIN
ATOM     18  O   TRP     1      -0.402   2.481  -0.636  1.00  0.00      MAIN
ATOM     19  OXT TRP     1      -0.106   2.192   1.459  1.00  0.00      MAIN
END

coor copy end
do (refx=x) (all)
do (refy=y) (all)
do (refz=z) (all)
 
parameter 
  nbonds
     atom cdie shift eps=1.0
          cutnb=30.0 ctonnb=99.0 ctofnb=99.0
     nbxmod 5 vswitch
  end
end




{* test harmonic point constraints *}
{* =============================== *}

flags exclude * include harm end

restraints harmonic exponent 2 end

do ( cons = 40.0 ) ( name ca )
show element ( cons ) ( all )


test first tol=0.0 sele=( name ca ) end

coor sele=(name ca) trans vector=(1.0 0.5 1.0 ) end

test first tol=0.0 sele=( name ca ) end
energy end

minimize powell nstep=30 step=20 end
write coor sele=(name ca) end
coor rms sele=(name ca) end

coor swap end
coor copy end






{* test harmonic planar constraints *}
{* ================================ *}

flags exclude * include harm end

{* test constrains parallel to elongation *}
{* energy and gradient should be the same as above *}
restraints 
	harmonic exponent 2 
	normal = (1.0 0.5 1.0)
	?
end

do ( cons = -40.0 ) ( name CA )
show element ( cons ) ( all )
energy end

test first tol=0.0 sele=( name ca ) end

coor sele=(name ca) trans vector=(1.0 0.5 1.0 ) end
write coor sele=(name ca) end
coor rms sele=(name ca) end
evaluate ($elong=$result)
do (bcomp = cons * $elong * $elong) (name ca)
show (bcomp) (name ca)

test first tol=0.0 sele=( name ca ) end
energy end

minimize powell nstep=30 step=20 end
write coor sele=(name ca) end
coor rms sele=(name ca) end

coor swap end
coor copy end






{* test constrains perpenticular to elongation *}
{* energy and gradient should be both zero *}
restraints 
	harmonic exponent 2 
	normal = (-0.5 1.0 0.0)
	?
end

do ( cons = -40.0 ) ( name CA )
show element ( cons ) ( all )
energy end

test first tol=0.0 sele=( name ca ) end

coor sele=(name ca) trans vector=(1.0 0.5 1.0 ) end
write coor sele=(name ca) end
coor rms sele=(name ca) end
evaluate ($elong=$result)
do (bcomp = cons * $elong * $elong) (name ca)
show (bcomp) (name ca)

test first tol=0.0 sele=( name ca ) end
energy end


minimize powell nstep=30 step=20 end
write coor sele=(name ca) end
coor rms sele=(name ca) end

coor swap end
coor copy end






{* test constrains parallel to z-direction *}
restraints 
	harmonic exponent 2 
	normal = (0.0 0.0 1.0)
	?
end

do ( cons = -40.0 ) ( name CA )
show element ( cons ) ( all )
energy end

test first tol=0.0 sele=( name ca ) end

coor sele=(name ca) trans vector=(1.0 0.5 1.0 ) end
write coor sele=(name ca) end
coor rms sele=(name ca) end
evaluate ($elong=$result)
do (bcomp = cons * $elong * $elong) (name ca)
show (bcomp) (name ca)
show (z) (name ca)   evaluate ($z = $result)
show (refz) (name ca)   evaluate ($zref = $result)
evaluate ($distance = $z - $zref)
display $distance

test first tol=0.0 sele=( name ca ) end
energy end


minimize powell nstep=30 step=20 end
write coor sele=(name ca) end
coor rms sele=(name ca) end

show (z) (name ca)   evaluate ($z = $result)
show (refz) (name ca)   evaluate ($zref = $result)
evaluate ($distance = $z - $zref)
display $distance

coor swap end
coor copy end


restraints 
	harmonic exponent 2 
	normal = (0.0 0.0 1.0)
	?
end

do ( cons = -40.0 ) ( name CA )
show element ( cons ) ( all )
energy end

test first tol=0.0 sele=( name ca ) end

coor sele=(name ca) trans vector=(-1.0 -0.5 -1.0 ) end
write coor sele=(name ca) end
coor rms sele=(name ca) end
evaluate ($elong=$result)
do (bcomp = cons * $elong * $elong) (name ca)
show (bcomp) (name ca)
show (z) (name ca)   evaluate ($z = $result)
show (refz) (name ca)   evaluate ($zref = $result)
evaluate ($distance = $z - $zref)
display $distance

test first tol=0.0 sele=( name ca ) end
energy end


minimize powell nstep=30 step=20 end
write coor sele=(name ca) end
coor rms sele=(name ca) end

show (z) (name ca)   evaluate ($z = $result)
show (refz) (name ca)   evaluate ($zref = $result)
evaluate ($distance = $z - $zref)
display $distance

coor swap end
coor copy end






{* test positive force constant *}
{* energy and gradient should be the same as for point constrains *}
restraints
	harmonic exponent 2 
	normal = (-0.5 1.0 0.0)
	?
end

do ( cons = 40.0 ) ( name CA )
show element ( cons ) ( all )
energy end

test first tol=0.0 sele=( name ca ) end

coor sele=(name ca) trans vector=(1.0 0.5 1.0 ) end
write coor sele=(name ca) end
coor rms sele=(name ca) end
evaluate ($elong=$result)
do (bcomp = cons * $elong * $elong) (name ca)
show (bcomp) (name ca)

test first tol=0.0 sele=( name ca ) end
energy end


minimize powell nstep=30 step=20 end
write coor sele=(name ca) end
coor rms sele=(name ca) end

coor swap end
coor copy end





{* test positive and negative force constant *}
{* energy and gradient should be the same as for point constrains *}
restraints
	harmonic exponent 2 
	normal = (0.0 1.0 0.0)
	?
end

do ( cons = -40.0 ) ( name CA )
do ( cons = 40.0 ) ( name CE2 )
show element ( cons ) ( all )
energy end

test first tol=0.0 sele=( name ca or name ce2 ) end

coor sele=(name ca or name ce2) trans vector=(1.0 0.5 1.0) end
write coor sele=(name ca or name ce2) end
coor rms sele=(name ce2) end
coor rms sele=(name ca) end
evaluate ($elong=$result)
do (bcomp = cons * $elong * $elong) (name ca)
show (bcomp) (name ca)
show (y) (name ca)   evaluate ($y = $result)
show (refy) (name ca)   evaluate ($yref = $result)
evaluate ($distance = $y - $yref)

test first tol=0.0 sele=( name ca ) end
energy end


minimize powell nstep=30 step=20 end
coor rms sele=(name ce2) end
coor rms sele=(name ca) end
show (y) (name ca)   evaluate ($y = $result)
show (refy) (name ca)   evaluate ($yref = $result)
evaluate ($distance = $y - $yref)
display $distance
write coor sele=(name ca or name ce2) end

coor swap end
coor copy end

do ( cons = 0.0 ) ( all )




{* turn off planar constrains, resulting in point constrains *}
{* energy and gradient should be the same as for point constrains *}
restraints
	harmonic exponent 2 
	normal = (0.0 0.0 0.0)
	?
end

do ( cons = 40.0 ) ( name CA )
show element ( cons ) ( all )
energy end

test first tol=0.0 sele=( name ca ) end

coor sele=(name ca) trans vector=(1.0 0.5 1.0 ) end
write coor sele=(name ca) end
coor rms sele=(name ca) end
evaluate ($elong=$result)
do (bcomp = cons * $elong * $elong) (name ca)
show (bcomp) (name ca)

test first tol=0.0 sele=( name ca ) end
energy end


minimize powell nstep=30 step=20 end
write coor sele=(name ca) end
coor rms sele=(name ca) end



stop
