          ============================================================
          |                                                          |
          |            Crystallography & NMR System (CNS)            |
          |                         CNSsolve                         |
          |                                                          |
          ============================================================
           Version: 1.3
           Status: General release
          ============================================================
           Written by: A.T.Brunger, P.D.Adams, G.M.Clore, W.L.DeLano,
                       P.Gros, R.W.Grosse-Kunstleve,J.-S.Jiang,J.M.Krahn,
                       J.Kuszewski, M.Nilges, N.S.Pannu, R.J.Read,
                       L.M.Rice, G.F.Schroeder, T.Simonson, G.L.Warren.
           Copyright (c) 1997-2010 Yale University
          ============================================================
           Running on machine: lewis4-r710-login-node223 (x86_64/Linux,64-bit)
                               with 16 threads
           Program started by: oeow39
           Program started at: 16:08:03 on 05-Jul-2018
          ============================================================

 FFT3C: Using FFTPACK4.1

 CNSsolve>set abort = off end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! ADVANCED MODULE FUNCTIONS 
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! inlining of non-module files 
 CNSsolve> 
 CNSsolve>eval ( $my_symbol = 0 ) 
 EVALUATE: symbol $MY_SYMBOL set to    0.00000     (real)
 CNSsolve> 
 CNSsolve>set display=moduletest.dat end 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>literal eval ( $my_symbol = 1 ) 
 CNSsolve>literal $? 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest.dat end 
 CNSsolve> 
 CNSsolve>! this should not affect $my_symbol in the current scope 
 CNSsolve>@moduletest.dat 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>eval ( $my_symbol = 1 ) 
 EVALUATE: symbol $MY_SYMBOL set to    1.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_2_MY_SYMBOL=   1.00000     (real)
 $_1_MY_SYMBOL=   0.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve> 
 CNSsolve>display $my_symbol ! <= should be 0 
0 ! <= should be 0
 CNSsolve> 
 CNSsolve>! this should change $my_symbol in the current scope 
 CNSsolve>inline @moduletest.dat 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>eval ( $my_symbol = 1 ) 
 EVALUATE: symbol $MY_SYMBOL set to    1.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_1_MY_SYMBOL=   1.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve> 
 CNSsolve>display $my_symbol ! <= should be 1 
1 ! <= should be 1
 CNSsolve> 
 CNSsolve>! now check error handling 
 CNSsolve> 
 CNSsolve>inline xray end 
 %NEXTWD error encountered: INLINE directive not appropriate in this context
   (CNS is in mode: SET ABORT=OFF END)
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! now check calling of modules from within nested inline files 
 CNSsolve> 
 CNSsolve>set display=moduletest3.dat end 
 ASSFIL: file moduletest3.dat opened.
 CNSsolve>literal inline @moduletest2.dat 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest3.dat end 
 CNSsolve> 
 CNSsolve>set display=moduletest2.dat end 
 ASSFIL: file moduletest2.dat opened.
 CNSsolve>literal @moduletest.dat ( &value = 1 ) 
 CNSsolve>literal display $my_symbol  ! <== should be 0 
 CNSsolve>literal @moduletest.dat ( &sym = $my_symbol; &value = 2 ) 
 CNSsolve>literal display $my_symbol ! <== should be 2 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest2.dat end 
 CNSsolve> 
 CNSsolve>set display=moduletest.dat end 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>literal module ( &sym = $my_symbol; value; ) 
 CNSsolve>literal eval ( &sym = &value ) 
 CNSsolve>literal $? 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest.dat end 
 CNSsolve> 
 CNSsolve>eval ( $my_symbol = 0 ) 
 EVALUATE: symbol $MY_SYMBOL set to    0.00000     (real)
 CNSsolve> 
 CNSsolve>! no side effects 
 CNSsolve>@moduletest3.dat 
 ASSFIL: file moduletest3.dat opened.
 CNSsolve>inline @moduletest2.dat 
 ASSFIL: file moduletest2.dat opened.
 CNSsolve>@moduletest.dat ( &value = 1 ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &sym = $my_symbol; value; ) 
 &_4_VALUE set to 1 
 CNSsolve>eval ( &sym = &value ) 
 EVALUATE: symbol $_4_MY_SYMBOL set to    1.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_4_MY_SYMBOL=   1.00000     (real)
 $_1_MY_SYMBOL=   0.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol  ! <== should be 0 
0  ! <== should be 0
 CNSsolve>@moduletest.dat ( &sym = $my_symbol; &value = 2 ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &sym = $my_symbol; value; ) 
 &_4_SYM set to $_3_MY_SYMBOL 
 &_4_VALUE set to 2 
 CNSsolve>eval ( &sym = &value ) 
 EVALUATE: symbol $_3_MY_SYMBOL set to    2.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_2_MY_SYMBOL=   2.00000     (real)
 $_1_MY_SYMBOL=   0.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol ! <== should be 2 
2 ! <== should be 2
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_1_MY_SYMBOL=   0.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol ! <= should be 0 
0 ! <= should be 0
 CNSsolve>define ( ? ) 
 Current Define Parameters
 NOTE: The scope number (#) of &<name> is shown as &_#_<name> 
 CNSsolve> 
 CNSsolve>! inline => should have side effects 
 CNSsolve>inline @moduletest3.dat 
 ASSFIL: file moduletest3.dat opened.
 CNSsolve>inline @moduletest2.dat 
 ASSFIL: file moduletest2.dat opened.
 CNSsolve>@moduletest.dat ( &value = 1 ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &sym = $my_symbol; value; ) 
 &_4_VALUE set to 1 
 CNSsolve>eval ( &sym = &value ) 
 EVALUATE: symbol $_4_MY_SYMBOL set to    1.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_4_MY_SYMBOL=   1.00000     (real)
 $_1_MY_SYMBOL=   0.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol  ! <== should be 0 
0  ! <== should be 0
 CNSsolve>@moduletest.dat ( &sym = $my_symbol; &value = 2 ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &sym = $my_symbol; value; ) 
 &_4_SYM set to $_3_MY_SYMBOL 
 &_4_VALUE set to 2 
 CNSsolve>eval ( &sym = &value ) 
 EVALUATE: symbol $_3_MY_SYMBOL set to    2.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_1_MY_SYMBOL=   2.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol ! <== should be 2 
2 ! <== should be 2
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_1_MY_SYMBOL=   2.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol ! <= should be 2 
2 ! <= should be 2
 CNSsolve>define ( ? ) 
 Current Define Parameters
 NOTE: The scope number (#) of &<name> is shown as &_#_<name> 
 CNSsolve> 
 CNSsolve>eval ( $my_symbol = 0 ) 
 EVALUATE: symbol $MY_SYMBOL set to    0.00000     (real)
 CNSsolve> 
 CNSsolve>! check @@ as well 
 CNSsolve>inline @@moduletest3.dat 
 ASSFIL: file moduletest3.dat opened.
 CNSsolve>inline @moduletest2.dat 
 ASSFIL: file moduletest2.dat opened.
 CNSsolve>@moduletest.dat ( &value = 1 ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &sym = $my_symbol; value; ) 
 &_4_VALUE set to 1 
 CNSsolve>eval ( &sym = &value ) 
 EVALUATE: symbol $_4_MY_SYMBOL set to    1.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_4_MY_SYMBOL=   1.00000     (real)
 $_1_MY_SYMBOL=   0.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol  ! <== should be 0 
0  ! <== should be 0
 CNSsolve>@moduletest.dat ( &sym = $my_symbol; &value = 2 ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &sym = $my_symbol; value; ) 
 &_4_SYM set to $_3_MY_SYMBOL 
 &_4_VALUE set to 2 
 CNSsolve>eval ( &sym = &value ) 
 EVALUATE: symbol $_3_MY_SYMBOL set to    2.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_1_MY_SYMBOL=   2.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol ! <== should be 2 
2 ! <== should be 2
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_1_MY_SYMBOL=   2.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>display $my_symbol ! <= should be 2 
2 ! <= should be 2
 CNSsolve>define ( ? ) 
 Current Define Parameters
 NOTE: The scope number (#) of &<name> is shown as &_#_<name> 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>! and check out all of the terrible side effects that arise 
 CNSsolve>! from inlining a module (legal - may actually be useful in the future) 
 CNSsolve> 
 CNSsolve>inline @moduletest.dat ( &value = 5 ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &sym = $my_symbol; value; ) 
 &_2_VALUE set to 5 
 CNSsolve>eval ( &sym = &value ) 
 EVALUATE: symbol $_2_MY_SYMBOL set to    5.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_1_MY_SYMBOL=   5.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>define ( ? ) 
 Current Define Parameters
 NOTE: The scope number (#) of &<name> is shown as &_#_<name> 
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! now check inline in conditional statements 
 CNSsolve> 
 CNSsolve>! this should not produce an error 
 CNSsolve> 
 CNSsolve>evaluate ($filename="junk") 
 EVALUATE: symbol $FILENAME set to "junk" (string)
 CNSsolve> 
 CNSsolve>if ($filename="ok") then 
 NEXTCD: condition evaluated as false
 CNSsolve>   inline @$filename 
 CNSsolve>end if 
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! passage of compound parameters 
 CNSsolve> 
 CNSsolve>set display=moduletest.dat end 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>display module ( &comp ) 
 CNSsolve>display display &comp.b.cd 
 CNSsolve>display display &comp.b.ef 
 CNSsolve>display display &comp.a 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest.dat end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>define ( a.a    = aa; 
 DEFINE>         a.b.cd = abcd; 
 DEFINE>         a.b.ef = abef; ) 
 CNSsolve> 
 CNSsolve>! this will substitute 
 CNSsolve> 
 CNSsolve>@moduletest.dat ( comp = &a ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &comp ) 
 &_2_COMP set to &_1_A 
 CNSsolve>display &comp.b.cd 
abcd
 CNSsolve>display &comp.b.ef 
abef
 CNSsolve>display &comp.a 
aa
 CNSsolve> 
 CNSsolve>! this won't 
 CNSsolve> 
 CNSsolve>@moduletest.dat ( comp = a ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &comp ) 
 &_2_COMP set to a 
 CNSsolve>display &comp.b.cd 
a.b.cd
 CNSsolve>display &comp.b.ef 
a.b.ef
 CNSsolve>display &comp.a 
a.a
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! using loops for initialization and readout 
 CNSsolve> 
 CNSsolve>set display=moduletest.dat end 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>literal module ( &comp ) 
 CNSsolve>literal for $tmp in ( 1 2 ) loop test 
 CNSsolve>literal    display &comp.$tmp.valueA 
 CNSsolve>literal    display &comp.$tmp.valueB 
 CNSsolve>literal    display &comp.$tmp.valueC 
 CNSsolve>literal end loop test 
 CNSsolve> 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest.dat end 
 CNSsolve> 
 CNSsolve>for $tmp in ( 1 2 ) loop main 
 FOR LOOP: symbol TMP set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>   define ( par.$tmp.valueA = some initial parameter ; 
 DEFINE>            par.$tmp.valueB = another initial parameter; 
 DEFINE>            par.$tmp.valueC = yet another intial parameter; 
 DEFINE>          ) 
 CNSsolve> 
 CNSsolve>end loop main 
 CNSsolve>for $tmp in ( 1 2 ) loop main 
 FOR LOOP: symbol TMP set to    2.00000     (real)
 CNSsolve> 
 CNSsolve>   define ( par.$tmp.valueA = some initial parameter ; 
 DEFINE>            par.$tmp.valueB = another initial parameter; 
 DEFINE>            par.$tmp.valueC = yet another intial parameter; 
 DEFINE>          ) 
 CNSsolve> 
 CNSsolve>end loop main 
 CNSsolve>for $tmp in ( 1 2 ) loop main 
 CNSsolve> 
 CNSsolve>   define ( par.$tmp.valueA = some initial parameter ; 
 CNSsolve>            par.$tmp.valueB = another initial parameter; 
 CNSsolve>            par.$tmp.valueC = yet another intial parameter; 
 CNSsolve>          ) 
 CNSsolve> 
 CNSsolve>end loop main 
 CNSsolve> 
 CNSsolve>define ( ? ) 
 Current Define Parameters
 NOTE: The scope number (#) of &<name> is shown as &_#_<name> 
 &_1_PAR.2.VALUEC= yet another intial parameter 
 &_1_PAR.2.VALUEB= another initial parameter 
 &_1_PAR.2.VALUEA= some initial parameter 
 &_1_PAR.1.VALUEC= yet another intial parameter 
 &_1_PAR.1.VALUEB= another initial parameter 
 &_1_PAR.1.VALUEA= some initial parameter 
 &_1_A.B.EF= abef 
 &_1_A.B.CD= abcd 
 &_1_A.A= aa 
 CNSsolve> 
 CNSsolve>@moduletest.dat ( &comp = &par ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &comp ) 
 &_2_COMP set to &_1_PAR 
 CNSsolve>for $tmp in ( 1 2 ) loop test 
 FOR LOOP: symbol TMP set to    1.00000     (real)
 CNSsolve>   display &comp.$tmp.valueA 
some initial parameter
 CNSsolve>   display &comp.$tmp.valueB 
another initial parameter
 CNSsolve>   display &comp.$tmp.valueC 
yet another intial parameter
 CNSsolve>end loop test 
 CNSsolve>for $tmp in ( 1 2 ) loop test 
 FOR LOOP: symbol TMP set to    2.00000     (real)
 CNSsolve>   display &comp.$tmp.valueA 
some initial parameter
 CNSsolve>   display &comp.$tmp.valueB 
another initial parameter
 CNSsolve>   display &comp.$tmp.valueC 
yet another intial parameter
 CNSsolve>end loop test 
 CNSsolve>for $tmp in ( 1 2 ) loop test 
 CNSsolve>   display &comp.$tmp.valueA 
 CNSsolve>   display &comp.$tmp.valueB 
 CNSsolve>   display &comp.$tmp.valueC 
 CNSsolve>end loop test 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! using loops for initialization and readout 
 CNSsolve> 
 CNSsolve>set display=moduletest.dat end 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>literal module ( &comp ) 
 CNSsolve>literal for $tmp in ( 1 2 ) loop test 
 CNSsolve>literal $? 
 CNSsolve>literal    display &comp.$tmp.valueA 
 CNSsolve>literal    display &comp.$tmp.valueB 
 CNSsolve>literal    display &comp.$tmp.valueC 
 CNSsolve>literal end loop test 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest.dat end 
 CNSsolve> 
 CNSsolve>for $tmp in ( 1 2 ) loop main 
 FOR LOOP: symbol TMP set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>   define ( par.$tmp.valueA = some initial parameter ; 
 DEFINE>            par.$tmp.valueB = another initial parameter; 
 DEFINE>            par.$tmp.valueC = yet another intial parameter; 
 DEFINE>          ) 
 CNSsolve> 
 CNSsolve>end loop main 
 CNSsolve>for $tmp in ( 1 2 ) loop main 
 FOR LOOP: symbol TMP set to    2.00000     (real)
 CNSsolve> 
 CNSsolve>   define ( par.$tmp.valueA = some initial parameter ; 
 DEFINE>            par.$tmp.valueB = another initial parameter; 
 DEFINE>            par.$tmp.valueC = yet another intial parameter; 
 DEFINE>          ) 
 CNSsolve> 
 CNSsolve>end loop main 
 CNSsolve>for $tmp in ( 1 2 ) loop main 
 CNSsolve> 
 CNSsolve>   define ( par.$tmp.valueA = some initial parameter ; 
 CNSsolve>            par.$tmp.valueB = another initial parameter; 
 CNSsolve>            par.$tmp.valueC = yet another intial parameter; 
 CNSsolve>          ) 
 CNSsolve> 
 CNSsolve>end loop main 
 CNSsolve> 
 CNSsolve>define ( ? ) 
 Current Define Parameters
 NOTE: The scope number (#) of &<name> is shown as &_#_<name> 
 &_1_PAR.2.VALUEC= yet another intial parameter 
 &_1_PAR.2.VALUEB= another initial parameter 
 &_1_PAR.2.VALUEA= some initial parameter 
 &_1_PAR.1.VALUEC= yet another intial parameter 
 &_1_PAR.1.VALUEB= another initial parameter 
 &_1_PAR.1.VALUEA= some initial parameter 
 &_1_A.B.EF= abef 
 &_1_A.B.CD= abcd 
 &_1_A.A= aa 
 CNSsolve> 
 CNSsolve>@moduletest.dat ( &comp = &par ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &comp ) 
 &_2_COMP set to &_1_PAR 
 CNSsolve>for $tmp in ( 1 2 ) loop test 
 FOR LOOP: symbol TMP set to    1.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_2_FOR_LINE="for $tmp in ( 1 2 ) loop test " (string) 
 $_2_TMP_TYPE="DP" (string) 
 $_2_TMP=   1.00000     (real)
 $_1_FOR_LINE="for $tmp in ( 1 2 ) loop main " (string) 
 $_1_TMP_TYPE="DP" (string) 
 $_1_TMP=   2.00000     (real)
 $_1_FILENAME="junk" (string) 
 $_1_MY_SYMBOL=   5.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>   display &comp.$tmp.valueA 
some initial parameter
 CNSsolve>   display &comp.$tmp.valueB 
another initial parameter
 CNSsolve>   display &comp.$tmp.valueC 
yet another intial parameter
 CNSsolve>end loop test 
 CNSsolve>for $tmp in ( 1 2 ) loop test 
 FOR LOOP: symbol TMP set to    2.00000     (real)
 CNSsolve>$? 
 Current Symbol Table
 NOTE: The scope number (#) of $<name> is shown as $_#_<name> 
 $_2_FOR_LINE="for $tmp in ( 1 2 ) loop test " (string) 
 $_2_TMP_TYPE="DP" (string) 
 $_2_TMP=   2.00000     (real)
 $_1_FOR_LINE="for $tmp in ( 1 2 ) loop main " (string) 
 $_1_TMP_TYPE="DP" (string) 
 $_1_TMP=   2.00000     (real)
 $_1_FILENAME="junk" (string) 
 $_1_MY_SYMBOL=   5.00000     (real)
 $_1_NCS=   1.00000     (real)
 $_1_EFLAG.VEAN="FALSE" (logical) 
 $_1_EFLAG.DANI="FALSE" (logical) 
 $_1_EFLAG.SANI="FALSE" (logical) 
 $_1_EFLAG.RAMA="FALSE" (logical) 
 $_1_EFLAG.ONEB="FALSE" (logical) 
 $_1_EFLAG.PROT="FALSE" (logical) 
 $_1_EFLAG.CARB="FALSE" (logical) 
 $_1_EFLAG.COUP="FALSE" (logical) 
 $_1_EFLAG.ANDB="FALSE" (logical) 
 $_1_EFLAG.DG="FALSE" (logical) 
 $_1_EFLAG.PLAN="FALSE" (logical) 
 $_1_EFLAG.XREF="FALSE" (logical) 
 $_1_EFLAG.NOE="FALSE" (logical) 
 $_1_EFLAG.NCS="FALSE" (logical) 
 $_1_EFLAG.CDIH="FALSE" (logical) 
 $_1_EFLAG.HARM="FALSE" (logical) 
 $_1_EFLAG.PELE="FALSE" (logical) 
 $_1_EFLAG.PVDW="FALSE" (logical) 
 $_1_EFLAG.ELEC="TRUE" (logical) 
 $_1_EFLAG.VDW="TRUE" (logical) 
 $_1_EFLAG.IMPR="TRUE" (logical) 
 $_1_EFLAG.DIHE="TRUE" (logical) 
 $_1_EFLAG.ANGL="TRUE" (logical) 
 $_1_EFLAG.BOND="TRUE" (logical) 
 $_1_EFLAG.GRAD="FALSE" (logical) 
 $_1_EFLAG.TEMP="FALSE" (logical) 
 $_1_EFLAG.ENER="FALSE" (logical) 
 $_1_EFLAG.TOTK="FALSE" (logical) 
 $_1_EFLAG.TOTE="FALSE" (logical) 
 $_1_BIN_NUMBER=   8.00000     (real)
 $_1_SYMMETRY=   1.00000     (real)
 $_1_CSTAR=   1.00000     (real)
 $_1_BSTAR=   1.00000     (real)
 $_1_ASTAR=   1.00000     (real)
 $_1_XRINTR_3_3=   1.00000     (real)
 $_1_XRINTR_3_2=   0.00000     (real)
 $_1_XRINTR_3_1=   0.00000     (real)
 $_1_XRINTR_2_3= -0.349148E-14 (real)
 $_1_XRINTR_2_2=   1.00000     (real)
 $_1_XRINTR_2_1=   0.00000     (real)
 $_1_XRINTR_1_3= -0.349148E-14 (real)
 $_1_XRINTR_1_2= -0.349148E-14 (real)
 $_1_XRINTR_1_1=   1.00000     (real)
 $_1_XRTR_3_3=   1.00000     (real)
 $_1_XRTR_3_2=   0.00000     (real)
 $_1_XRTR_3_1=   0.00000     (real)
 $_1_XRTR_2_3=  0.349148E-14 (real)
 $_1_XRTR_2_2=   1.00000     (real)
 $_1_XRTR_2_1=   0.00000     (real)
 $_1_XRTR_1_3=  0.349148E-14 (real)
 $_1_XRTR_1_2=  0.349148E-14 (real)
 $_1_XRTR_1_1=   1.00000     (real)
 $_1_XRCELL_6=   90.0000     (real)
 $_1_XRCELL_5=   90.0000     (real)
 $_1_XRCELL_4=   90.0000     (real)
 $_1_XRCELL_3=   1.00000     (real)
 $_1_XRCELL_2=   1.00000     (real)
 $_1_XRCELL_1=   1.00000     (real)
 $_1_VOLUME=   1.00000     (real)
 $_1_FP_EPSILON=  0.222045E-15 (real)
 $_1_CNS_PATCH="0" (string) 
 $_1_CNS_VERSION="1.3" (string) 
 $_1_LOG_LEVEL="QUIET" (string) 
 $_1_SYSTEM="x86_64/Linux" (string) 
 $_1_NAME="oeow39" (string) 
 $_1_TIMFAC=  0.488882E-01 (real)
 $_1_PI=   3.14159     (real)
 $_1_KBOLTZ=  0.198719E-02 (real)
 CNSsolve>   display &comp.$tmp.valueA 
some initial parameter
 CNSsolve>   display &comp.$tmp.valueB 
another initial parameter
 CNSsolve>   display &comp.$tmp.valueC 
yet another intial parameter
 CNSsolve>end loop test 
 CNSsolve>for $tmp in ( 1 2 ) loop test 
 CNSsolve>$? 
 CNSsolve>   display &comp.$tmp.valueA 
 CNSsolve>   display &comp.$tmp.valueB 
 CNSsolve>   display &comp.$tmp.valueC 
 CNSsolve>end loop test 
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! passing variables to a function using structured symbols 
 CNSsolve> 
 CNSsolve>set display=moduletest.dat end 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>literal module ( &compound.symbol ) 
 CNSsolve>literal for $tmp in ( 1 2 ) loop test 
 CNSsolve>literal $? 
 CNSsolve>literal    display &comp.$tmp.valueA 
 CNSsolve>literal    display &comp.$tmp.valueB 
 CNSsolve>literal    display &comp.$tmp.valueC 
 CNSsolve>literal end loop test 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest.dat end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve>!====================================================================== 
 CNSsolve>! arrays, etc. 
 CNSsolve> 
 CNSsolve>! matrix multiplication example 
 CNSsolve> 
 CNSsolve>set display=moduletest.dat end 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>literal module ( &m1; &m2; &p; ) 
 CNSsolve>literal 
 CNSsolve>literal if ( &m1.cols ne &m2.rows ) then 
 CNSsolve>literal   display MATRIX DIMENSION MISMATCH &m1.cols != &m2.rows 
 CNSsolve>literal else 
 CNSsolve>literal eval ( $a = 1 ) 
 CNSsolve>literal while ( $a le &m1.rows ) loop a 
 CNSsolve>literal    eval ( $b = 1 ) 
 CNSsolve>literal    while ( $b le &m2.cols ) loop b 
 CNSsolve>literal       eval ( $z = 1 ) 
 CNSsolve>literal       eval ( $sum = 0 ) 
 CNSsolve>literal       while ( $z le &m1.cols ) loop z 
 CNSsolve>literal          eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>literal          eval ( $z = $z + 1 ) 
 CNSsolve>literal       end loop z 
 CNSsolve>literal       eval ( &p.ij.$a.$b = $sum ) 
 CNSsolve>literal       eval ( $b = $b + 1 ) 
 CNSsolve>literal    end loop b 
 CNSsolve>literal    eval ( $a = $a + 1 ) 
 CNSsolve>literal end loop a 
 CNSsolve>literal eval ( &p.rows = &m1.rows ) 
 CNSsolve>literal eval ( &p.cols = &m2.cols ) 
 CNSsolve>literal end if 
 CNSsolve> 
 CNSsolve>set display=OUTPUT end 
 CNSsolve>close moduletest.dat end 
 CNSsolve> 
 CNSsolve> 
 CNSsolve> 
 CNSsolve> eval ( $a = 1 ) 
 EVALUATE: symbol $A set to    1.00000     (real)
 CNSsolve> while ( $a le 5 ) loop a 
 NEXTCD: condition evaluated as true
 CNSsolve>    eval ( $b = 1 ) 
 EVALUATE: symbol $B set to    1.00000     (real)
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.1.1 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.1.1 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    2.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.2.1 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.1.2 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    3.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.3.1 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.1.3 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    4.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as false
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 CNSsolve>    end loop b 
 CNSsolve>    eval ( $a = $a + 1 ) 
 EVALUATE: symbol $A set to    2.00000     (real)
 CNSsolve> end loop a 
 CNSsolve> while ( $a le 5 ) loop a 
 NEXTCD: condition evaluated as true
 CNSsolve>    eval ( $b = 1 ) 
 EVALUATE: symbol $B set to    1.00000     (real)
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.1.2 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.2.1 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    2.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.2.2 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.2.2 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    3.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.3.2 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.2.3 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    4.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as false
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 CNSsolve>    end loop b 
 CNSsolve>    eval ( $a = $a + 1 ) 
 EVALUATE: symbol $A set to    3.00000     (real)
 CNSsolve> end loop a 
 CNSsolve> while ( $a le 5 ) loop a 
 NEXTCD: condition evaluated as true
 CNSsolve>    eval ( $b = 1 ) 
 EVALUATE: symbol $B set to    1.00000     (real)
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.1.3 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.3.1 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    2.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.2.3 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.3.2 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    3.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.3.3 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.3.3 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    4.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as false
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 CNSsolve>    end loop b 
 CNSsolve>    eval ( $a = $a + 1 ) 
 EVALUATE: symbol $A set to    4.00000     (real)
 CNSsolve> end loop a 
 CNSsolve> while ( $a le 5 ) loop a 
 NEXTCD: condition evaluated as true
 CNSsolve>    eval ( $b = 1 ) 
 EVALUATE: symbol $B set to    1.00000     (real)
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.1.4 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.4.1 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    2.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.2.4 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.4.2 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    3.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.3.4 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.4.3 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    4.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as false
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 CNSsolve>    end loop b 
 CNSsolve>    eval ( $a = $a + 1 ) 
 EVALUATE: symbol $A set to    5.00000     (real)
 CNSsolve> end loop a 
 CNSsolve> while ( $a le 5 ) loop a 
 NEXTCD: condition evaluated as true
 CNSsolve>    eval ( $b = 1 ) 
 EVALUATE: symbol $B set to    1.00000     (real)
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.1.5 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.5.1 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    2.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.2.5 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.5.2 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    3.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 EVALUATE: symbol $MAT1.IJ.3.5 set to    1.00000     (real)
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 EVALUATE: symbol $MAT2.IJ.5.3 set to    1.00000     (real)
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    4.00000     (real)
 CNSsolve>    end loop b 
 CNSsolve>    while ( $b le 3 ) loop b 
 NEXTCD: condition evaluated as false
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 CNSsolve>    end loop b 
 CNSsolve>    eval ( $a = $a + 1 ) 
 EVALUATE: symbol $A set to    6.00000     (real)
 CNSsolve> end loop a 
 CNSsolve> while ( $a le 5 ) loop a 
 NEXTCD: condition evaluated as false
 CNSsolve>    eval ( $b = 1 ) 
 CNSsolve>    while ( $b le 3 ) loop b 
 CNSsolve> 
 CNSsolve>         eval ( $mat1.ij.$b.$a = 1 ) 
 CNSsolve>         eval ( $mat2.ij.$a.$b = 1 ) 
 CNSsolve> 
 CNSsolve>       eval ( $b = $b + 1 ) 
 CNSsolve>    end loop b 
 CNSsolve>    eval ( $a = $a + 1 ) 
 CNSsolve> end loop a 
 CNSsolve> 
 CNSsolve>eval ( $mat1.rows = 3 ) 
 EVALUATE: symbol $MAT1.ROWS set to    3.00000     (real)
 CNSsolve>eval ( $mat1.cols = 5 ) 
 EVALUATE: symbol $MAT1.COLS set to    5.00000     (real)
 CNSsolve> 
 CNSsolve>eval ( $mat2.rows = 5 ) 
 EVALUATE: symbol $MAT2.ROWS set to    5.00000     (real)
 CNSsolve>eval ( $mat2.cols = 3 ) 
 EVALUATE: symbol $MAT2.COLS set to    3.00000     (real)
 CNSsolve> 
 CNSsolve>define ( mt = $mat1 ) 
 CNSsolve> 
 CNSsolve>@moduletest.dat ( m1 = $mat1; m2 = $mat2; p = $prod; ) 
 ASSFIL: file moduletest.dat opened.
 CNSsolve>module ( &m1; &m2; &p; ) 
 &_2_M1 set to $_1_MAT1 
 &_2_M2 set to $_1_MAT2 
 &_2_P set to $_1_PROD 
 CNSsolve> 
 CNSsolve>if ( &m1.cols ne &m2.rows ) then 
 NEXTCD: condition evaluated as false
 CNSsolve>  display MATRIX DIMENSION MISMATCH &m1.cols != &m2.rows 
 CNSsolve>else 
 CNSsolve>eval ( $a = 1 ) 
 EVALUATE: symbol $A set to    1.00000     (real)
 CNSsolve>while ( $a le &m1.rows ) loop a 
 NEXTCD: condition evaluated as true
 CNSsolve>   eval ( $b = 1 ) 
 EVALUATE: symbol $B set to    1.00000     (real)
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.1.1 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    2.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.1.2 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    3.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.1.3 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    4.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as false
 CNSsolve>      eval ( $z = 1 ) 
 CNSsolve>      eval ( $sum = 0 ) 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 CNSsolve>      eval ( $b = $b + 1 ) 
 CNSsolve>   end loop b 
 CNSsolve>   eval ( $a = $a + 1 ) 
 EVALUATE: symbol $A set to    2.00000     (real)
 CNSsolve>end loop a 
 CNSsolve>while ( $a le &m1.rows ) loop a 
 NEXTCD: condition evaluated as true
 CNSsolve>   eval ( $b = 1 ) 
 EVALUATE: symbol $B set to    1.00000     (real)
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.2.1 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    2.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.2.2 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    3.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.2.3 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    4.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as false
 CNSsolve>      eval ( $z = 1 ) 
 CNSsolve>      eval ( $sum = 0 ) 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 CNSsolve>      eval ( $b = $b + 1 ) 
 CNSsolve>   end loop b 
 CNSsolve>   eval ( $a = $a + 1 ) 
 EVALUATE: symbol $A set to    3.00000     (real)
 CNSsolve>end loop a 
 CNSsolve>while ( $a le &m1.rows ) loop a 
 NEXTCD: condition evaluated as true
 CNSsolve>   eval ( $b = 1 ) 
 EVALUATE: symbol $B set to    1.00000     (real)
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.3.1 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    2.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.3.2 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    3.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as true
 CNSsolve>      eval ( $z = 1 ) 
 EVALUATE: symbol $Z set to    1.00000     (real)
 CNSsolve>      eval ( $sum = 0 ) 
 EVALUATE: symbol $SUM set to    0.00000     (real)
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    1.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    2.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    2.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    3.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    3.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    4.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    4.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    5.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as true
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 EVALUATE: symbol $SUM set to    5.00000     (real)
 CNSsolve>         eval ( $z = $z + 1 ) 
 EVALUATE: symbol $Z set to    6.00000     (real)
 CNSsolve>      end loop z 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 NEXTCD: condition evaluated as false
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 EVALUATE: symbol $_1_PROD.IJ.3.3 set to    5.00000     (real)
 CNSsolve>      eval ( $b = $b + 1 ) 
 EVALUATE: symbol $B set to    4.00000     (real)
 CNSsolve>   end loop b 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 NEXTCD: condition evaluated as false
 CNSsolve>      eval ( $z = 1 ) 
 CNSsolve>      eval ( $sum = 0 ) 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 CNSsolve>      eval ( $b = $b + 1 ) 
 CNSsolve>   end loop b 
 CNSsolve>   eval ( $a = $a + 1 ) 
 EVALUATE: symbol $A set to    4.00000     (real)
 CNSsolve>end loop a 
 CNSsolve>while ( $a le &m1.rows ) loop a 
 NEXTCD: condition evaluated as false
 CNSsolve>   eval ( $b = 1 ) 
 CNSsolve>   while ( $b le &m2.cols ) loop b 
 CNSsolve>      eval ( $z = 1 ) 
 CNSsolve>      eval ( $sum = 0 ) 
 CNSsolve>      while ( $z le &m1.cols ) loop z 
 CNSsolve>         eval ( $sum = $sum + &m1.ij.$a.$z * &m2.ij.$z.$b ) 
 CNSsolve>         eval ( $z = $z + 1 ) 
 CNSsolve>      end loop z 
 CNSsolve>      eval ( &p.ij.$a.$b = $sum ) 
 CNSsolve>      eval ( $b = $b + 1 ) 
 CNSsolve>   end loop b 
 CNSsolve>   eval ( $a = $a + 1 ) 
 CNSsolve>end loop a 
 CNSsolve>eval ( &p.rows = &m1.rows ) 
 EVALUATE: symbol $_1_PROD.ROWS set to    3.00000     (real)
 CNSsolve>eval ( &p.cols = &m2.cols ) 
 EVALUATE: symbol $_1_PROD.COLS set to    3.00000     (real)
 CNSsolve>end if 
 CNSsolve> 
 CNSsolve>set echo = off end 
  5   5   5
  5   5   5
  5   5   5
          ============================================================
           Maximum dynamic memory allocation:     8201488 bytes
           Maximum dynamic memory overhead:           256 bytes
           Program started at: 16:08:03 on 05-Jul-2018
           Program stopped at: 16:08:03 on 05-Jul-2018
           CPU time used:       0.0383 seconds
          ============================================================
