          ============================================================
          |                                                          |
          |            Crystallography & NMR System (CNS)            |
          |                         CNSsolve                         |
          |                                                          |
          ============================================================
           Version: 1.3
           Status: General release
          ============================================================
           Written by: A.T.Brunger, P.D.Adams, G.M.Clore, W.L.DeLano,
                       P.Gros, R.W.Grosse-Kunstleve,J.-S.Jiang,J.M.Krahn,
                       J.Kuszewski, M.Nilges, N.S.Pannu, R.J.Read,
                       L.M.Rice, G.F.Schroeder, T.Simonson, G.L.Warren.
           Copyright (c) 1997-2010 Yale University
          ============================================================
           Running on machine: lewis4-r710-login-node223 (x86_64/Linux,64-bit)
                               with 16 threads
           Program started by: oeow39
           Program started at: 16:08:03 on 05-Jul-2018
          ============================================================

 FFT3C: Using FFTPACK4.1

 CNSsolve>remarks  MAPYARD.INP 
 CNSsolve>remarks  tests mapyard command in XRAY 
 CNSsolve>remarks  By R.W.Grosse-Kunstleve 
 CNSsolve> 
 CNSsolve>{* Generate a one-atom dummy structure 
 CNSsolve> *} 
 CNSsolve>topology 
 RTFRDR>  residue SI 
 RESIDUE>    atom SI mass=14 charge=0 {chemical}type="SI+4" end 
 RESIDUE>  end 
 RTFRDR>end 
 CNSsolve> 
 CNSsolve>segment 
 SEGMENT>  name = QZ 
 SEGMENT>  molecule {res}name=SI number=1 end 
 SEGMENT>end 
 Status of internal molecular topology database:
 -> NATOM=          1(MAXA=     1000000)  NBOND=          0(MAXB=     1000000)
 -> NTHETA=         0(MAXT=     2000000)  NGRP=           1(MAXGRP=   1000000)
 -> NPHI=           0(MAXP=     2000000)  NIMPHI=         0(MAXIMP=   1000000)
 -> NNB=            0(MAXNB=    1000000) 
 CNSsolve> 
 CNSsolve>do (name="SI1") (resid=1) 
 SELRPN:      1 atoms have been selected out of      1
 CNSsolve> 
 CNSsolve>do (x=0.499   ) (name=SI1) 
 SELRPN:      1 atoms have been selected out of      1
 CNSsolve>do (y=0.000   ) (name=SI1) 
 SELRPN:      1 atoms have been selected out of      1
 CNSsolve>do (z=0.333333) (name=SI1) 
 SELRPN:      1 atoms have been selected out of      1
 CNSsolve>do (q=1.0     ) (name=SI1) 
 SELRPN:      1 atoms have been selected out of      1
 CNSsolve>do (b=2.0     ) (name=SI1) 
 SELRPN:      1 atoms have been selected out of      1
 CNSsolve> 
 CNSsolve>evaluate ($a = 5.01) 
 EVALUATE: symbol $A set to    5.01000     (real)
 CNSsolve>evaluate ($b = 6.25) 
 EVALUATE: symbol $B set to    6.25000     (real)
 CNSsolve>evaluate ($c = 5.47) 
 EVALUATE: symbol $C set to    5.47000     (real)
 CNSsolve>evaluate ($alpha = 100) 
 EVALUATE: symbol $ALPHA set to    100.000     (real)
 CNSsolve>evaluate ($beta  =  80) 
 EVALUATE: symbol $BETA set to    80.0000     (real)
 CNSsolve>evaluate ($gamma = 110) 
 EVALUATE: symbol $GAMMA set to    110.000     (real)
 CNSsolve> 
 CNSsolve> 
 CNSsolve>{* define some general xray settings 
 CNSsolve> *} 
 CNSsolve>xray 
 XRAY>  a=$a b=$b c=$c alpha=$alpha beta=$beta gamma=$gamma 
 XRAY>  method=direct 
 XRAY>  mapresolution 1 
 XRAY>  @@CNS_XRAYLIB:scatter.lib 
 ASSFIL: file scatter.lib opened.
 XRAY>! file libraries/xray/scatter.lib 
 XRAY>! Atomic scattering factors without anomalous contribution 
 XRAY>! Library for CNS 
 XRAY> 
 XRAY>! Authors: Paul Adams, Joe Jaeger, and Axel T. Brunger 
 XRAY> 
 XRAY>!BEWARE: 
 XRAY>!(1) element Cf (Californium) has to be referred to as Cff 
 XRAY>!(2) element Sm (Samarium) has to be referred to as Smm 
 XRAY>!(3) element Np (Neptunium) has to be referred to as Npp 
 XRAY>!(3) types of elements with ionic state (i.e., +/-) specifications have 
 XRAY>!    to be put in double quotes in selection statements. 
 XRAY> 
 XRAY>set message ? end 
 MESSage=NORM
 XRAY>evaluate ($message_old_sclib=$result) 
 EVALUATE: symbol $MESSAGE_OLD_SCLIB set to "NORM" (string)
 XRAY>set echo ? end 
 ECHO=TRUE {ON}
 XRAY>evaluate ($echo_old_sclib=$result) 
 EVALUATE: symbol $ECHO_OLD_SCLIB set to TRUE (logical)
 XRAY>set echo=off message=off end 
 XRAY>end 
 CNSsolve> 
 CNSsolve>coordinates orthogonalize end 
 ORTHO: transformation matrix =
     5.010000    -2.137626     0.949856
     0.000000     5.873079    -0.665096
     0.000000     0.000000     5.345683
 CNSsolve> 
 CNSsolve>xray 
 XRAY>  {* generate reflections 
 XRAY>   *} 
 XRAY>  anomalous = false 
 XRAY>  generate 100000. 1.0 
 XGENER: generating reflections to produce a full set
         for the specified resolution range.
 XGENE2:      330 new reflections have been generated.
 XRAY> 
 XRAY>  {* compute dummy "fobs" 
 XRAY>   *} 
 XRAY>  declare name=fobs domain=reciprocal type=complex end 
 XDECLARE: Object FOBS has been declared.
 XRAY>  predict 
 PREDict>    mode=reciprocal 
 PREDict>    to=fobs 
 PREDict>    atomselection=(all) 
 SELRPN:      1 atoms have been selected out of      1
 PREDict>    selection (all) 
 Total of       330 structure factor elements were selected.
 PREDict>  end 
 FOBS: #scatt.=      1 #anomalous=   0 #special pos.=  0 occupancies=1
 XSFAL: allocating space for complex reciprocal space object.
 XRAY> 
 XRAY>  fft 
 XFFT>    grid=0.4 
 XFFT>    xgridfactor=12 
 XFFT>    ygridfactor=15 
 XFFT>    zgridfactor=10 
 XFFT>  end 
 XRAY> 
 XRAY>  {* compute some maps *} 
 XRAY>  declare name=map1 domain=real end 
 XRAY>  declare name=map2 domain=real end 
 XRAY>  do (map1=FT(combine(amplitude(fobs),   0))) (all) 
 XSFAL: allocating space for complex reciprocal space object.
 Total of       330 structure factor elements were selected.
 XMAPASU: using grid [  12,  15,  20] and sublattice [  12,  15,  20]
 Maps will be stored in P1:
   A=     0,...,    11  B=     0,...,    14  C=     0,...,    19
 XMAPAL: allocating space for real space object.
 XRAY>  do (map2=FT(combine(amplitude(fobs)^2, 0))) (all) 
 XSFAL: allocating space for complex reciprocal space object.
 Total of       330 structure factor elements were selected.
 XMAPAL: allocating space for real space object.
 XRAY> 
 XRAY>  show min (map1) (all) 
 Minimum of      3600 elements =                -1.4175
 XRAY>  show max (map1) (all) 
 Maximum of      3600 elements =                23.9381
 XRAY>  show min (map2) (all) 
 Minimum of      3600 elements =                -4.3913
 XRAY>  show max (map2) (all) 
 Maximum of      3600 elements =               145.9820
 XRAY> 
 XRAY>  {* store and restore... *} 
 XRAY>  mapyard 
 MAPYard>    store map1 a 
 MAPYard>    store map1 b 
 MAPYard>    store map1 c 
 MAPYard>    store map1 d 
 MAPYard>    store map1 e 
 MAPYard>    store map1 a 
 MAPYARD: Old map was removed.
 MAPYard>    store map1 f 
 MAPYard>    store map1 g 
 MAPYard>    store map1 h 
 MAPYard>    store map1 i 
 MAPYard>    store map1 j 
 MAPYard>    store map1 f 
 MAPYARD: Old map was removed.
 MAPYard>    clear b 
 MAPYard>    store map2 k 
 MAPYard>    ? 
 -----------mapyard-inventory---------------------------------------------------
 Label              na   nb   nc
 A                  12   15   20
 K                  12   15   20
 C                  12   15   20
 D                  12   15   20
 E                  12   15   20
 F                  12   15   20
 G                  12   15   20
 H                  12   15   20
 I                  12   15   20
 J                  12   15   20
 -------------------------------------------------------------------------------
 MAPYard>  end 
 XRAY> 
 XRAY>  declare name=map3 domain=real end 
 XRAY>  mapyard 
 MAPYard>    restore k map3 
 XMAPAL: allocating space for real space object.
 MAPYard>  end 
 XRAY> 
 XRAY>  {* make sure map2 and map3 are exactly equal 
 XRAY>   *} 
 XRAY>  show max (abs(map2-map3)) (all) 
 Maximum of      3600 elements =                 0.0000
 XRAY>  if ($result # 0) then 
 NEXTCD: condition evaluated as false
 XRAY>    abort 
 XRAY>  end if 
 XRAY> 
 XRAY>  mapyard 
 MAPYard>    clear all 
 MAPYard>    ? 
 -----------mapyard-inventory---------------------------------------------------
 Label              na   nb   nc
 -------------------------------------------------------------------------------
 MAPYard>    store map1 a 
 MAPYard>  end 
 XRAY> 
 XRAY>  mapyard 
 MAPYard>    restore a map2 
 MAPYard>  end 
 XRAY> 
 XRAY>  {* make sure map1 and map2 are exactly equal 
 XRAY>   *} 
 XRAY>  show max (abs(map1-map2)) (all) 
 Maximum of      3600 elements =                 0.0000
 XRAY>  if ($result # 0) then 
 NEXTCD: condition evaluated as false
 XRAY>    abort 
 XRAY>  end if 
 XRAY>end 
 CNSsolve> 
 CNSsolve>stop 
          ============================================================
           Maximum dynamic memory allocation:     9459384 bytes
           Maximum dynamic memory overhead:           800 bytes
           Program started at: 16:08:03 on 05-Jul-2018
           Program stopped at: 16:08:03 on 05-Jul-2018
           CPU time used:       0.3298 seconds
          ============================================================
